Notebook[{
Cell[BoxData["Exit"], "Input",
 CellChangeTimes->{{3.9052502925206537`*^9, 3.905250293008569*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"878c0dcd-4b95-4163-a1b0-fa60423fa814"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "#", "]"}], ",", 
      RowBox[{"DeleteDirectory", "[", 
       RowBox[{"#", ",", 
        RowBox[{"DeleteContents", "->", "True"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], "&"}], "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", 
      "\"\<LibraryResources\>\"", ",", "$SystemID"}], "}"}], "]"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", "\[IndentingNewLine]", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", 
      "\"\<CoBarSLink.m\>\""}], "}"}], "]"}], "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", "\[IndentingNewLine]", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ParentDirectory", "[", 
      RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", 
     "\"\<Experiments\>\"", ",", "\"\<ActionAngleConfidenceSampler.m\>\""}], 
    "}"}], "]"}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"b8f14180-66a1-4d9b-93a2-0fdb35d4ec9b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"n", "=", "64"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"r", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{"2.", "/", "n"}], ",", "n"}], "]"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"confidence", "=", "0.95"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"radius", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chunksize", "=", "1000000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"maxsamplecount", "=", "100000000"}], ";"}], "\[IndentingNewLine]",
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"verboseQ", "=", "False"}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"verboseQ", "=", "True"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"\"\<True squared gyradius\>\"", "->", 
  RowBox[{
   RowBox[{"1.", "/", "3"}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n", "+", "1"}], ")"}], "/", 
    RowBox[{"n", "^", "2"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n", "/", "2"}], ")"}], "^", "2"}]}]}]}], "Input",
 CellLabel->"In[4]:=",ExpressionUUID->"826ec0c8-acdf-45d7-b194-9735ee051a3a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"resultAAM", "=", 
   RowBox[{"ActionAngleConfidenceSample", "[", 
    RowBox[{"n", ",", "radius", ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<MaxSamples\>\"", "->", "maxsamplecount"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<ConfidenceLevel\>\"", "->", "confidence"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<ChunkSize\>\"", "->", "chunksize"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Progressive\>\"", "->", "False"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Verbose\>\"", "->", "verboseQ"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dataset", "[", "resultAAM", "]"}], "\[IndentingNewLine]"}], "Input",
 
 CellLabel->"In[11]:=",ExpressionUUID->"8a2ce2dc-2fba-4fce-b2b5-dd923dea5cff"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"resultPAAM", "=", 
   RowBox[{"ActionAngleConfidenceSample", "[", 
    RowBox[{"n", ",", "radius", ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<MaxSamples\>\"", "->", "maxsamplecount"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<ConfidenceLevel\>\"", "->", "confidence"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<ChunkSize\>\"", "->", "chunksize"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Progressive\>\"", "->", "True"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Verbose\>\"", "->", "verboseQ"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dataset", "[", "resultPAAM", "]"}]}], "Input",
 CellChangeTimes->{{3.9060590193478622`*^9, 3.9060590474507627`*^9}, {
   3.9060597989204187`*^9, 3.906059799962381*^9}, 3.906060358481762*^9, {
   3.906061031650228*^9, 3.90606103228518*^9}, {3.906061233235653*^9, 
   3.906061260863965*^9}, {3.906061351059826*^9, 3.9060613793111773`*^9}, {
   3.906061598797516*^9, 3.906061603382868*^9}, {3.906061724490995*^9, 
   3.906061750955216*^9}, 3.906113175811886*^9, 3.906113234389431*^9, {
   3.906113294266877*^9, 3.906113323041615*^9}, {3.906113411023487*^9, 
   3.9061134114145727`*^9}, {3.906113488275984*^9, 3.906113489681119*^9}, {
   3.9061135310883713`*^9, 3.906113532321734*^9}, {3.906113671794179*^9, 
   3.90611367214043*^9}, {3.906113702591626*^9, 3.906113703809572*^9}, 
   3.9061138474943657`*^9, {3.906114247680882*^9, 3.906114252712625*^9}, 
   3.906114286491987*^9, 3.9061143812455606`*^9, {3.906114445311441*^9, 
   3.906114445739526*^9}, {3.9061144850209923`*^9, 3.906114515083527*^9}, {
   3.906114549036298*^9, 3.9061145498464117`*^9}, {3.906114794511929*^9, 
   3.906114824491865*^9}, {3.906114891415207*^9, 3.9061148914935923`*^9}, {
   3.906115407117288*^9, 3.906115419970768*^9}, {3.90611588847768*^9, 
   3.906115888591749*^9}, {3.906115920107395*^9, 3.906115994890951*^9}, {
   3.9061160539998217`*^9, 3.906116054531952*^9}, {3.906116142820388*^9, 
   3.906116162787134*^9}, {3.906116201700947*^9, 3.9061162822850513`*^9}, {
   3.906116323745242*^9, 3.906116346940557*^9}, {3.906116476972739*^9, 
   3.9061164847181873`*^9}, {3.906116520894598*^9, 3.906116522257186*^9}, {
   3.906116631182774*^9, 3.906116631247704*^9}, {3.906117072220639*^9, 
   3.9061170929124107`*^9}, {3.906118197405417*^9, 3.906118197499352*^9}, {
   3.906118238677751*^9, 3.906118272103243*^9}, {3.906118446884301*^9, 
   3.906118633749281*^9}, {3.906119420575076*^9, 3.906119420727408*^9}, {
   3.906122690016017*^9, 3.9061227660274153`*^9}, {3.90612281305198*^9, 
   3.9061228158698606`*^9}, {3.906123235713746*^9, 3.9061232408424683`*^9}, {
   3.906123455233903*^9, 3.906123460614593*^9}, {3.906126212389625*^9, 
   3.906126217774547*^9}, {3.9061269221036463`*^9, 3.9061269468754168`*^9}, {
   3.906126985004973*^9, 3.906126990681182*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"8068e57a-7a54-4d4a-99c4-dd2ba71d9adb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"resultCoBarS", "=", 
   RowBox[{"CoBarConfidenceSample", "[", 
    RowBox[{"\"\<SquaredGyradius\>\"", ",", "3", ",", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"1.", ",", "n"}], "]"}], ",", "radius", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<SphereRadii\>\"", "\[Rule]", "\"\<SymplecticQuotient\>\""}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<QuotientSpace\>\"", "\[Rule]", "True"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<ConfidenceLevel\>\"", "->", "confidence"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<MaxSamples\>\"", "->", "maxsamplecount"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<ChunkSize\>\"", "->", "chunksize"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Verbose\>\"", "->", "verboseQ"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dataset", "[", "resultCoBarS", "]"}]}], "Input",
 CellLabel->"In[15]:=",ExpressionUUID->"8c1baa2f-b610-4964-847e-3a94ba310e3a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\<\"  total_time  = 1.066806972026825\"\>", 
  "\[LineSeparator]"}]], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->
  False,ExpressionUUID->"19d07a17-d624-423d-a62e-af453b59a610"],

Cell[BoxData["\<\"  Current estimate of SquaredGyradius = 5.416620816896472 \
+/- 0.001 with confidence = 0.4964836278512829.\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"16112be7-f931-4ce8-8cf4-03e57a1abda6"],

Cell[BoxData["\<\"N = 3000000\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"a1eabb7f-0842-43f3-a727-cf07a9b02ffb"],

Cell[BoxData["\<\"  total_time  = 1.582679271697998\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"9909691c-15b0-4c5d-8501-503a5cd3828f"],

Cell[BoxData["\<\"  Current estimate of SquaredGyradius = 5.416320904336057 \
+/- 0.001 with confidence = 0.588826963930508.\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"13fb26ef-8644-42ed-bf57-2d8f21cfbdf4"],

Cell[BoxData["\<\"N = 4000000\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"2cd309b4-1938-4990-ba2a-da1a8af097b9"],

Cell[BoxData["\<\"  total_time  = 2.097973227500916\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"eaaa0969-65a4-4294-86e5-5b2a2f03b650"],

Cell[BoxData["\<\"  Current estimate of SquaredGyradius = 5.417163370530291 \
+/- 0.001 with confidence = 0.6577494526843791.\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"c9388950-d31a-401d-9e41-ebdf47c04121"],

Cell[BoxData["\<\"N = 5000000\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"0752ac71-52cb-4240-9c74-83b4a96c2e5d"],

Cell[BoxData["\<\"  total_time  = 2.617522776126862\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"8b7a6567-7a5a-47b8-b08d-376c69bcf126"],

Cell[BoxData["\<\"  Current estimate of SquaredGyradius = 5.416681938205765 \
+/- 0.001 with confidence = 0.7119766530303329.\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"e0a711f9-ccf0-4c34-b0cf-6b10cd7c1f6f"],

Cell[BoxData["\<\"N = 6000000\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"3741ab50-f86e-430f-89b1-8d014cd30717"],

Cell[BoxData["\<\"  total_time  = 3.10722142457962\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"1a415d76-e6e3-4652-b6b6-5d9a061e9aeb"],

Cell[BoxData["\<\"  Current estimate of SquaredGyradius = 5.417002413181644 \
+/- 0.001 with confidence = 0.7552415543433192.\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"b5d16330-626d-4abc-bfdd-68df3cb76e33"],

Cell[BoxData["\<\"N = 7000000\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"38e7b5d7-55df-4e85-8790-8a6cfdfc0524"],

Cell[BoxData["\<\"  total_time  = 3.603663951158524\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"575093f5-e1d5-4d8e-b952-aafec89aa414"],

Cell[BoxData["\<\"  Current estimate of SquaredGyradius = 5.41732698006433 \
+/- 0.001 with confidence = 0.7908498596202358.\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"3395d7c9-be8e-462f-b1e8-d76d762bbf3b"],

Cell[BoxData["\<\"N = 8000000\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"a0007b08-6f57-40c5-b062-7802190c335f"],

Cell[BoxData["\<\"  total_time  = 4.10248139500618\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"842aedfd-9181-4ffb-a256-752ffd30dbb3"],

Cell[BoxData["\<\"  Current estimate of SquaredGyradius = 5.417032662517672 \
+/- 0.001 with confidence = 0.8208593138394696.\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"7438e331-b5aa-4cd3-9fde-a85aad67f797"],

Cell[BoxData["\<\"N = 9000000\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"138fbdb4-7a98-42d7-96a2-55709b2e0f3b"],

Cell[BoxData["\<\"  total_time  = 4.593011826276779\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"3041231d-6548-4ffa-a3dc-feea989e2377"],

Cell[BoxData["\<\"  Current estimate of SquaredGyradius = 5.417212350259042 \
+/- 0.001 with confidence = 0.8454075894199453.\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"cf07002b-970e-4055-b268-d2273c9fa9de"],

Cell[BoxData["\<\"N = 10000000\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"5de6638a-7280-4f48-a8cd-e1cfa86f619c"],

Cell[BoxData["\<\"  total_time  = 5.086381465196609\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"c355aa6c-e606-4c5a-a9fe-5dfe2f477381"],

Cell[BoxData["\<\"  Current estimate of SquaredGyradius = 5.416903066465967 \
+/- 0.001 with confidence = 0.866455534156937.\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"7d5c0532-bdcf-42d6-9182-4492ca6870ed"],

Cell[BoxData["\<\"N = 11000000\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"a4b1a87e-de45-4e7b-b6bd-06e49b152bcf"],

Cell[BoxData["\<\"  total_time  = 5.611765891313553\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"20cd97ba-2396-452e-8d5b-b48a14756f62"],

Cell[BoxData["\<\"  Current estimate of SquaredGyradius = 5.417013606064966 \
+/- 0.001 with confidence = 0.8844217373577328.\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"9966da6c-00fb-45d8-9e83-37bfd102bf66"],

Cell[BoxData["\<\"N = 12000000\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"4c624d3e-34cd-4176-be68-62e893ea6d56"],

Cell[BoxData["\<\"  total_time  = 6.125454932451248\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"d33e5d52-568a-4112-b410-6b40bf43e63c"],

Cell[BoxData["\<\"  Current estimate of SquaredGyradius = 5.416965520291388 \
+/- 0.001 with confidence = 0.8998827050988972.\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"c9688655-0a46-44e6-a0f6-8d71e3910691"],

Cell[BoxData["\<\"N = 13000000\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"38db8e65-f889-45e5-97e8-34ae77a904e2"],

Cell[BoxData["\<\"  total_time  = 6.6209956407547\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"df06b8a8-d5d3-480b-9702-7b8bab228a5e"],

Cell[BoxData["\<\"  Current estimate of SquaredGyradius = 5.417019575697967 \
+/- 0.001 with confidence = 0.9130038264111064.\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"abfb643e-b4ac-48ee-9cbe-f6296c360dcd"],

Cell[BoxData["\<\"N = 14000000\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"48c7154c-bd45-4a69-9b3f-fedc7f76b6e5"],

Cell[BoxData["\<\"  total_time  = 7.128826975822449\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"9cb36284-8beb-47bf-876a-4b6eb7334c10"],

Cell[BoxData["\<\"  Current estimate of SquaredGyradius = 5.417133364303281 \
+/- 0.001 with confidence = 0.9242542569489263.\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"3f82b28e-80bc-4369-8865-cb8fa6456b93"],

Cell[BoxData["\<\"N = 15000000\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"2aa8dbfb-9a4a-4671-9378-d9717ea51847"],

Cell[BoxData["\<\"  total_time  = 7.614444106817245\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"bbb475fd-2b2d-4c0d-b364-63485f20c06a"],

Cell[BoxData["\<\"  Current estimate of SquaredGyradius = 5.417064724196426 \
+/- 0.001 with confidence = 0.93401961884425.\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"666834b6-96c6-484f-8717-f5adf70c300d"],

Cell[BoxData["\<\"N = 16000000\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"3c925ff3-b8c4-40f6-b752-17b6ef12e457"],

Cell[BoxData["\<\"  total_time  = 8.122264295816422\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"77347133-c7c2-477b-abfd-183322a3eb34"],

Cell[BoxData["\<\"  Current estimate of SquaredGyradius = 5.416945983219772 \
+/- 0.001 with confidence = 0.9425115778159563.\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"8a6b65d6-67c8-4c51-9d6e-2dacbdb25d6e"],

Cell[BoxData["\<\"N = 17000000\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"b75d9dc9-3cc8-44e1-a139-5ca864c51045"],

Cell[BoxData["\<\"  total_time  = 8.6124147772789\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"68de9bf6-a9d0-4112-8560-4212470185a6"],

Cell[BoxData["\<\"  Current estimate of SquaredGyradius = 5.417132120227203 \
+/- 0.001 with confidence = 0.949775606546322.\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"520d0f7e-5214-4d5d-bbc1-1f4ec514d7fe"],

Cell[BoxData["\<\"N = 18000000\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"e2ff02ab-5e5a-4dc2-a0b4-268665b84c86"],

Cell[BoxData["\<\"  total_time  = 9.109474360942841\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"ff749359-0f5d-4a37-9273-aaf667354738"],

Cell[BoxData["\<\"  Current estimate of SquaredGyradius = 5.417136498286286 \
+/- 0.001 with confidence = 0.9560912739361396.\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"3633cbc6-93e1-4a75-9203-29514156e5db"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "SampleMean" -> 5.417136498286286, "SampleVariance" -> 
       3.6149337826095738`, "ConfidenceRadius" -> 0.0009731445312499999, 
       "PrescribedError" -> 0.001, "ConfidenceLevel" -> 0.95, 
       "AmbientDimension" -> 3, "EdgeCount" -> 64, "r" -> CompressedData["
1:eJxTTMoPSmVkYGBwYICBD/aj9MikAQZBTas=
        "], "\[Rho]" -> CompressedData["
1:eJxTTMoPSmVkYGBwYICBD/aj9MikAQZBTas=
        "], "SampleCount" -> 18000000, "MaxSamples" -> 100000000, 
       "QuotientSpace" -> True, "ThreadCount" -> 8, "ChunkSize" -> 1000000, 
       "Chunks" -> 18, "Timing" -> 11.616474|>, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"SampleMean"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"SampleVariance"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"ConfidenceRadius"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"PrescribedError"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"ConfidenceLevel"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"AmbientDimension"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"EdgeCount"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"r"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"\[Rho]"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"SampleCount"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"MaxSamples"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"QuotientSpace"} -> 
        TypeSystem`PackageScope`AtomShape[36], {"ThreadCount"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"ChunkSize"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Chunks"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Timing"} -> 
        TypeSystem`PackageScope`AtomShape[60]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{
       "SampleMean", "SampleVariance", "ConfidenceRadius", "PrescribedError", 
        "ConfidenceLevel", "AmbientDimension", "EdgeCount", "r", "\[Rho]", 
        "SampleCount", "MaxSamples", "QuotientSpace", "ThreadCount", 
        "ChunkSize", "Chunks", "Timing"}, {
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Vector[
         TypeSystem`Atom[Real], 64], 
        TypeSystem`Vector[
         TypeSystem`Atom[Real], 64], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[TypeSystem`Boolean], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Real]}], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"SampleMean"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"SampleVariance"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"ConfidenceRadius"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"PrescribedError"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"ConfidenceLevel"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"AmbientDimension"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"EdgeCount"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"r"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"\[Rho]"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"SampleCount"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"MaxSamples"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"QuotientSpace"} -> 
        TypeSystem`PackageScope`AtomShape[36], {"ThreadCount"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"ChunkSize"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Chunks"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Timing"} -> 
        TypeSystem`PackageScope`AtomShape[60]|>, 1], "Type" -> 
     TypeSystem`Struct[{
       "SampleMean", "SampleVariance", "ConfidenceRadius", "PrescribedError", 
        "ConfidenceLevel", "AmbientDimension", "EdgeCount", "r", "\[Rho]", 
        "SampleCount", "MaxSamples", "QuotientSpace", "ThreadCount", 
        "ChunkSize", "Chunks", "Timing"}, {
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Real], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Vector[
         TypeSystem`Atom[Real], 64], 
        TypeSystem`Vector[
         TypeSystem`Atom[Real], 64], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[TypeSystem`Boolean], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Real]}], "Path" -> {}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 16, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SampleMean", 
                  Style[
                  "SampleMean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["SampleMean"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["SampleMean"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.41714"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["SampleMean"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SampleVariance", 
                  Style[
                  "SampleVariance", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["SampleVariance"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["SampleVariance"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.61493"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["SampleVariance"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ConfidenceRadius", 
                  Style[
                  "ConfidenceRadius", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["ConfidenceRadius"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ConfidenceRadius"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000973145"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ConfidenceRadius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PrescribedError", 
                  Style[
                  "PrescribedError", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PrescribedError"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PrescribedError"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PrescribedError"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ConfidenceLevel", 
                  Style[
                  "ConfidenceLevel", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["ConfidenceLevel"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ConfidenceLevel"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.95"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ConfidenceLevel"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["AmbientDimension", 
                  Style[
                  "AmbientDimension", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["AmbientDimension"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["AmbientDimension"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["AmbientDimension"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["EdgeCount", 
                  Style[
                  "EdgeCount", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["EdgeCount"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["EdgeCount"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["64"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["EdgeCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["r", 
                  Style[
                  "r", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["r"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 64], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 64], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["r"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["r"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[Rho]", 
                  Style[
                  "\[Rho]", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[Rho]"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Rho]"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 64], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 64], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[Rho]"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Rho]"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SampleCount", 
                  Style[
                  "SampleCount", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["SampleCount"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["SampleCount"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["SampleCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MaxSamples", 
                  Style[
                  "MaxSamples", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["MaxSamples"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MaxSamples"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MaxSamples"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["QuotientSpace", 
                  Style[
                  "QuotientSpace", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["QuotientSpace"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["QuotientSpace"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["QuotientSpace"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ThreadCount", 
                  Style[
                  "ThreadCount", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["ThreadCount"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ThreadCount"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ThreadCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ChunkSize", 
                  Style[
                  "ChunkSize", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["ChunkSize"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ChunkSize"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ChunkSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Chunks", 
                  Style[
                  "Chunks", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Chunks"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Chunks"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Chunks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Timing", 
                  Style[
                  "Timing", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Timing"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Timing"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11.6165"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Timing"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{307., {337.2010498046875, 345.7989501953125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{307., {337.2010498046875, 345.7989501953125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[16]=",ExpressionUUID->"31d9adde-460d-4e2e-afda-87fd663ddbd2"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"confidence", "=", "0.95"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chunksize", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"maxsamplecount", "=", "100000000"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Dynamic", "[", "relativeRadius", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dynamic", "[", "n", "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"resultCoBarS", "=", 
   RowBox[{"Association", "[", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"relativeRadius", "->", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"KeyDrop", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<r\>\"", ",", "\"\<\[Rho]\>\""}], "}"}], "]"}], "@", 
          RowBox[{"CoBarConfidenceSample", "[", 
           RowBox[{"\"\<SquaredGyradius\>\"", ",", "3", ",", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"1.", ",", "n"}], "]"}], ",", "relativeRadius", ",", 
            "\[IndentingNewLine]", 
            RowBox[{
            "\"\<SphereRadii\>\"", "\[Rule]", "\"\<SymplecticQuotient\>\""}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"\"\<QuotientSpace\>\"", "\[Rule]", "True"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"\"\<ConfidenceLevel\>\"", "->", "confidence"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"\"\<MaxSamples\>\"", "->", "maxsamplecount"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"\"\<ChunkSize\>\"", "->", "chunksize"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"\"\<RelativeErrorMode\>\"", "->", "True"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"\"\<Verbose\>\"", "->", "False"}]}], 
           "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"n", ",", "8", ",", "100", ",", "4"}], "}"}]}], "]"}]}], 
      ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"relativeRadius", ",", 
        RowBox[{"{", 
         RowBox[{"0.1", ",", "0.01", ",", "0.001"}], "}"}]}], "}"}]}], "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellLabel->"In[19]:=",ExpressionUUID->"80e14c1d-dcac-45f5-83dd-d373fda3a69a"],

Cell[BoxData["resultCoBarS"], "Input",
 CellLabel->"In[25]:=",ExpressionUUID->"3c8c2cea-7776-4c39-b49e-2422ee3bf407"],

Cell[BoxData[""], "Input",
 CellLabel->"In[26]:=",ExpressionUUID->"e4345bee-8b89-4019-9049-331a38aa22fb"],

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"resultCoBarS", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"resultCoBarS", "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", 
    RowBox[{"resultCoBarS", "[", 
     RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.906129238148584*^9, 3.90612925219575*^9}, {
  3.906129498484375*^9, 3.906129519054057*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"78530516-b862-4536-8bbd-c648ab3051db"],

Cell[BoxData["resultCoBarS"], "Input",
 CellChangeTimes->{{3.906129189235537*^9, 
  3.906129190039678*^9}},ExpressionUUID->"459660d3-ba04-4b8f-a991-\
5e6d0144e24b"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ExprectedMeans", "=", 
    RowBox[{"AssociationThread", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Length", "/@", 
       RowBox[{"resultCoBarS", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "\"\<r\>\""}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"resultCoBarS", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "\"\<SampleMean\>\""}], "]"}], "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{3.906129209944366*^9},
 CellLabel->"In[28]:=",ExpressionUUID->"8a4cbfb9-073d-42f0-8bc1-6d2cc6ea58b1"],

Cell[BoxData[{
 RowBox[{"Dynamic", "[", "n", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"resultCoBarS", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"KeyDrop", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<r\>\"", ",", "\"\<\[Rho]\>\""}], "}"}], "]"}], "@", 
      RowBox[{"CoBarConfidenceSample", "[", 
       RowBox[{"\"\<SquaredGyradius\>\"", ",", "3", ",", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"1.", ",", "n"}], "]"}], ",", 
        RowBox[{"relativeRadius", " ", 
         RowBox[{"ExprectedMeans", "[", "n", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
        "\"\<SphereRadii\>\"", "\[Rule]", "\"\<SymplecticQuotient\>\""}], ",",
         "\[IndentingNewLine]", 
        RowBox[{"\"\<QuotientSpace\>\"", "\[Rule]", "True"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<ConfidenceLevel\>\"", "->", "confidence"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<MaxSamples\>\"", "->", "maxsamplecount"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<ChunkSize\>\"", "->", "chunksize"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<RelativeErrorMode\>\"", "->", "True"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Verbose\>\"", "->", "verboseQ"}]}], 
       "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"n", ",", "8", ",", "100", ",", "4"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",ExpressionUUID->"f3d125fa-586d-4f0e-b7da-476740fe0cdc"]
},
WindowSize->{1496, 905},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.3 for Mac OS X ARM (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"8c4ed024-3bf8-4383-a788-8ec0bb871d67"
]
