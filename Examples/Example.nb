(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     73485,       1797]
NotebookOptionsPosition[     62822,       1657]
NotebookOutlinePosition[     63262,       1674]
CellTagsIndexPosition[     63219,       1671]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Conformal Barycenter Sampling Examples", "Title",
 CellChangeTimes->{{3.871104071689574*^9, 
  3.87110408714654*^9}},ExpressionUUID->"3a146095-5861-4a45-b28c-\
af45c3a1b403"],

Cell["\<\
This notebook demonstrates the use of the conformal barycenter sampler by \
computing some example histograms for functions where we know the expected \
answers and comparing the results. \
\>", "Text",
 CellChangeTimes->{{3.871104090571639*^9, 3.871104105202362*^9}, {
  3.87110420472656*^9, 
  3.871104230694569*^9}},ExpressionUUID->"a59958e2-df4d-442a-b6a9-\
14a573f8451c"],

Cell[BoxData["Exit"], "Input",
 CellLabel->"In[9]:=",ExpressionUUID->"f4a2300d-b07c-4d44-bd02-bdd16cb87718"],

Cell[CellGroupData[{

Cell["Loading the sampler", "Section",
 CellChangeTimes->{{3.871104235959197*^9, 
  3.871104238441549*^9}},ExpressionUUID->"b2a6aab9-7985-4628-ae85-\
872f29fe46b3"],

Cell["\<\
The first step in using the barycenter sampling package is loading the \
sampler. From this example file, it\[CloseCurlyQuote]s one directory up:\
\>", "Text",
 CellChangeTimes->{{3.879944745280239*^9, 
  3.879944794235943*^9}},ExpressionUUID->"623ae2a1-c16a-4d52-ab94-\
aa47a7fecadd"],

Cell[BoxData[{
 RowBox[{"Get", "[", 
  RowBox[{"Echo", "@", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", 
      "\"\<CoBarSLink.m\>\""}], "}"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"CoBarSLink`Private`clearLibraries", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.873864232486377*^9, 3.873864248939806*^9}, 
   3.873864409189021*^9, {3.873865881533519*^9, 3.873865882905177*^9}, 
   3.878474353228426*^9, {3.906718509439636*^9, 3.906718510611799*^9}, {
   3.906719087212371*^9, 3.906719088992435*^9}, {3.9067254054909697`*^9, 
   3.906725405640671*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"2e901413-b913-4d3e-8981-340bec02670f"],

Cell["\<\
but you should alter the path accordingly if you\[CloseCurlyQuote]re working \
elsewhere. \
\>", "Text",
 CellChangeTimes->{{3.879944806455584*^9, 
  3.879944828451418*^9}},ExpressionUUID->"049ed49e-f68c-4ab3-9356-\
0b16a4906846"],

Cell["Get an overview over the most important symbols this way:", "Text",ExpressionUUID->"9fd8f8d3-d36a-4ad7-abc3-d69431d77dfa"],

Cell[BoxData[
 RowBox[{"?", "CoBarSLink`*"}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"ed9fc385-f53d-45d6-bdf4-f43defaf87f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["CoBarSample: Generating values of a function of a polygon", "Section",
 CellChangeTimes->{{3.928057302699224*^9, 
  3.9280573296426697`*^9}},ExpressionUUID->"d72aa303-1363-4348-94cc-\
e7ee0661f203"],

Cell["The first function in the library is CoBarSample:", "Text",ExpressionUUID->"23acb972-f7c6-4df9-a9ca-1fa419d217fc"],

Cell[BoxData[
 RowBox[{"?", "CoBarSample"}]], "Input",
 CellLabel->"In[4]:=",ExpressionUUID->"8640ef3e-00d9-465a-865c-a2289b7ba012"],

Cell[CellGroupData[{

Cell["Choosing a function (of polygons) to sample.", "Subsection",
 CellChangeTimes->{{3.927961936210688*^9, 
  3.927961943038784*^9}},ExpressionUUID->"567ee4b6-06a4-4173-8495-\
e612119baa30"],

Cell["\<\
CoBarSample collects sample values for a list of different geometric \
quantities. Each is a scalar-valued function of the coordinates of the \
polygon, such as the radius of gyration, or the bending energy. You can get a \
list of the different options with\
\>", "Text",
 CellChangeTimes->{{3.927749659597474*^9, 3.927749768850359*^9}, {
  3.927749798914105*^9, 3.927749845345038*^9}, {3.927749900236371*^9, 
  3.9277500521719127`*^9}, {3.927750133288657*^9, 3.927750134007229*^9}, {
  3.927961670313412*^9, 3.927961693078868*^9}, {3.927961946110926*^9, 
  3.9279620024069986`*^9}},ExpressionUUID->"30007743-99eb-49bc-bd6d-\
485e0fe49db9"],

Cell[BoxData["$CoBarSRandomVariables"], "Input",
 CellChangeTimes->{{3.927961696248913*^9, 3.927961698555521*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"8b9d583b-3060-49a4-bc3e-8fe98ce28cc9"],

Cell[TextData[{
 "For a polygon with vertices ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["x", "TI"], "1"], ",", "\[Ellipsis]", ",", 
         SubscriptBox[
          StyleBox["x", "TI"], 
          StyleBox["n", "TI"]]}], TraditionalForm], "errors" -> {}, "input" -> 
     "x_1, \\dotsc, x_n", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "6d8f850f-5a31-47a2-985e-d94d21c8ca2d"],
 ":\n\n\t\[OpenCurlyDoubleQuote]Gyradius\[CloseCurlyDoubleQuote] = ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SuperscriptBox[
        RowBox[{"(", 
          RowBox[{
            FractionBox["1", 
             StyleBox["n", "TI"]], 
            UnderoverscriptBox["\[Sum]", 
             RowBox[{
               StyleBox["i", "TI"], "\[LongEqual]", "1"}], 
             StyleBox["n", "TI"], LimitsPositioning -> True], 
            "\[DoubleVerticalBar]", 
            SubscriptBox[
             StyleBox["x", "TI"], 
             StyleBox["i", "TI"]], 
            SuperscriptBox["\[DoubleVerticalBar]", "2"], "-", 
            "\[DoubleVerticalBar]", 
            FractionBox["1", 
             StyleBox["n", "TI"]], 
            UnderoverscriptBox["\[Sum]", 
             RowBox[{
               StyleBox["i", "TI"], "\[LongEqual]", "1"}], 
             StyleBox["n", "TI"], LimitsPositioning -> True], 
            SubscriptBox[
             StyleBox["x", "TI"], 
             StyleBox["i", "TI"]], 
            SuperscriptBox["\[DoubleVerticalBar]", "2"]}], ")"}], 
        RowBox[{"1", "/", "2"}]], TraditionalForm], "errors" -> {}, "input" -> 
     "( \\frac{1}{n} \\sum_{i=1}^n \\| x_i \\|^2 - \\| \\frac{1}{n} \
\\sum_{i=1}^n x_i \\|^2)^{1/2}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "49b6180a-0761-4edd-bc33-be61c301bd37"]
}], "Text",
 CellChangeTimes->{{3.928059077363048*^9, 3.928059115085902*^9}, {
   3.928059174970413*^9, 3.928059189338247*^9}, {3.9280592433751287`*^9, 
   3.928059260194733*^9}, 
   3.928061235139843*^9},ExpressionUUID->"49934a42-975c-435d-be2c-\
fba3a7a9c58b"],

Cell[TextData[{
 "\t\[OpenCurlyDoubleQuote]SquaredGyradius\[CloseCurlyDoubleQuote] = ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         FractionBox["1", 
          StyleBox["n", "TI"]], 
         UnderoverscriptBox["\[Sum]", 
          RowBox[{
            StyleBox["i", "TI"], "\[LongEqual]", "1"}], 
          StyleBox["n", "TI"], LimitsPositioning -> True], 
         "\[DoubleVerticalBar]", 
         SubscriptBox[
          StyleBox["x", "TI"], 
          StyleBox["i", "TI"]], 
         SuperscriptBox["\[DoubleVerticalBar]", "2"], "-", 
         "\[DoubleVerticalBar]", 
         FractionBox["1", 
          StyleBox["n", "TI"]], 
         UnderoverscriptBox["\[Sum]", 
          RowBox[{
            StyleBox["i", "TI"], "\[LongEqual]", "1"}], 
          StyleBox["n", "TI"], LimitsPositioning -> True], 
         SubscriptBox[
          StyleBox["x", "TI"], 
          StyleBox["i", "TI"]], 
         SuperscriptBox["\[DoubleVerticalBar]", "2"], "."}], TraditionalForm],
      "errors" -> {}, "input" -> 
     "\\frac{1}{n} \\sum_{i=1}^n \\|x_i\\|^2 - \\| \\frac{1}{n} \\sum_{i=1}^n \
x_i \\|^2.", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "b36762ae-f862-4998-9f43-5cadc19e05ae"]
}], "Text",
 CellChangeTimes->{{3.928059194295596*^9, 3.928059197929501*^9}, {
   3.928059261346141*^9, 3.928059264379511*^9}, 
   3.928061236194852*^9},ExpressionUUID->"348f890b-5326-4f8e-ab6c-\
92294d62743f"],

Cell[TextData[{
 "\t\[OpenCurlyDoubleQuote]ChordLength\[CloseCurlyDoubleQuote][i,j] = ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"\[DoubleVerticalBar]", 
         SubscriptBox[
          StyleBox["x", "TI"], 
          StyleBox["i", "TI"]], "-", 
         SubscriptBox[
          StyleBox["x", "TI"], 
          StyleBox["j", "TI"]], "\[DoubleVerticalBar]"}], TraditionalForm], 
     "errors" -> {}, "input" -> "\\|x_i - x_j\\|", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "fe483069-8c68-4f85-9a01-614a62eee2dd"]
}], "Text",
 CellChangeTimes->{{3.928059248478422*^9, 3.928059271137196*^9}, 
   3.92806123733608*^9},ExpressionUUID->"807a2b2e-48b3-437f-aa91-\
9bcde1d49bf8"],

Cell[TextData[{
 "\t\[OpenCurlyDoubleQuote]DiagonalLength\[CloseCurlyDoubleQuote] = ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"\[DoubleVerticalBar]", 
         SubscriptBox[
          StyleBox["x", "TI"], "1"], "-", 
         SubscriptBox[
          StyleBox["x", "TI"], 
          RowBox[{"floor", 
            RowBox[{"[", 
              RowBox[{
                StyleBox["n", "TI"], "/", "2"}], "]"}]}]], 
         "\[DoubleVerticalBar]"}], TraditionalForm], "errors" -> {}, "input" -> 
     "\\| x_1 - x_{\\text{floor}[n/2]} \\|", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "3fedff68-7d03-4fed-bfb2-b41d678d4086"]
}], "Text",
 CellChangeTimes->{{3.928059298859047*^9, 3.928059305818905*^9}, 
   3.92806123845766*^9},ExpressionUUID->"1ce72956-b65e-424c-a78c-\
dc29bd44375b"],

Cell[TextData[{
 "Suppose that ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox["\[Theta]", 
          StyleBox["i", "TI"]], "\[LongEqual]", "\[Pi]", "-", "\[Angle]", 
         SubscriptBox[
          StyleBox["x", "TI"], 
          RowBox[{
            StyleBox["i", "TI"], "-", "1"}]], 
         SubscriptBox[
          StyleBox["x", "TI"], 
          StyleBox["i", "TI"]], 
         SubscriptBox[
          StyleBox["x", "TI"], 
          RowBox[{
            StyleBox["i", "TI"], "+", "1"}]], "\[LongEqual]", "\[Angle]", 
         RowBox[{"(", 
           RowBox[{
             SubscriptBox[
              StyleBox["x", "TI"], 
              StyleBox["i", "TI"]], "-", 
             SubscriptBox[
              StyleBox["x", "TI"], 
              RowBox[{
                StyleBox["i", "TI"], "-", "1"}]]}], ")"}], 
         RowBox[{"(", 
           RowBox[{
             SubscriptBox[
              StyleBox["x", "TI"], 
              RowBox[{
                StyleBox["i", "TI"], "+", "1"}]], "-", 
             SubscriptBox[
              StyleBox["x", "TI"], 
              StyleBox["i", "TI"]]}], ")"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "\\theta_i = \\pi - \\angle x_{i-1} x_i x_{i+1} = \\angle (x_{i} - \
x_{i-1}) (x_{i+1} - x_i)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "8ee245b5-3435-4682-83a4-899842529560"],
 " is the turning angle at vertex ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["i", "TI"], TraditionalForm], "errors" -> {}, "input" -> "i", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "c34bead3-d8a3-4a4f-825a-e13874f5f597"],
 ". Then "
}], "Text",
 CellChangeTimes->{{3.92805965684704*^9, 3.928059671225368*^9}, {
  3.9280597267741833`*^9, 
  3.928059739193968*^9}},ExpressionUUID->"60fdc762-c717-447c-adb0-\
384db15aa1ec"],

Cell[TextData[{
 "\t\[OpenCurlyDoubleQuote]MaxAngle\[CloseCurlyDoubleQuote] = ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"max", 
         RowBox[{"{", 
           RowBox[{
             SubscriptBox["\[Theta]", 
              StyleBox["i", "TI"]], "|", 
             StyleBox["i", "TI"], "\[Element]", "1", ",", "\[Ellipsis]", ",", 
             
             StyleBox["n", "TI"]}], "}"}]}], TraditionalForm], "errors" -> {},
      "input" -> "\\max \\{ \\theta_i \\mid i \\in 1, \\dotsc, n \\}", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "fdd01347-1b97-4467-9a25-218fdaabe75a"],
 "."
}], "Text",
 CellChangeTimes->{{3.928059743335403*^9, 3.928059768112018*^9}, 
   3.9280612403836412`*^9},ExpressionUUID->"63c532f6-e400-4a24-9390-\
f3225af39919"],

Cell[TextData[{
 "\t\[OpenCurlyDoubleQuote]TotalCurvature\[CloseCurlyDoubleQuote] = ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{
            StyleBox["i", "TI"], "\[LongEqual]", "1"}], 
          StyleBox["n", "TI"], LimitsPositioning -> True], 
         SubscriptBox["\[Theta]", 
          StyleBox["i", "TI"]]}], TraditionalForm], "errors" -> {}, "input" -> 
     "\\sum_{i=1}^n \\theta_i", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "53d33ed1-f4d4-421b-9c96-388a6dc10b1a"]
}], "Text",
 CellChangeTimes->{{3.928059828290489*^9, 3.9280598348501463`*^9}, 
   3.928061241715488*^9},ExpressionUUID->"482344d8-3db4-4cb8-98ed-\
e12e4bcbbb44"],

Cell["\<\
The other quantities have to do with the sampler itself and are mostly used \
for testing; the most useful ones for end-users are:\
\>", "Text",
 CellChangeTimes->{{3.928061231406326*^9, 3.928061253400111*^9}, {
  3.9280614891384068`*^9, 3.928061500817719*^9}, {3.928061750736453*^9, 
  3.928061771040681*^9}},ExpressionUUID->"167d2e9f-5c72-40b7-905d-\
1b390698e0b4"],

Cell[TextData[{
 "\t\[OpenCurlyDoubleQuote]EdgeSpaceSamplingWeight\[CloseCurlyDoubleQuote] -- \
the sampling weight ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["K", "TI"], TraditionalForm], "errors" -> {}, "input" -> "K", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "04fd84d4-0c57-4478-8707-c02dd0a27104"],
 " from ",
 StyleBox["CoBarS: Fast Reweighted Sampling for Polygons in any Dimension",
  FontSlant->"Italic"],
 " (Cantarella and Schumacher)"
}], "Text",
 CellChangeTimes->{{3.928061255475849*^9, 3.928061285073442*^9}, {
  3.928061348368285*^9, 
  3.928061433845221*^9}},ExpressionUUID->"8bc6c0d8-6707-46ca-9f34-\
62b3159b4d22"],

Cell[TextData[{
 "\t\[OpenCurlyDoubleQuote]EdgeQuotientSpaceSamplingWeight\
\[CloseCurlyDoubleQuote] -- the sampling weight ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       OverscriptBox[
        StyleBox["K", "TI"], "^"], TraditionalForm], "errors" -> {}, "input" -> 
     "\\hat{K}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "35361a43-c641-45c5-a53a-5e939d5f5281"],
 " from ",
 StyleBox["CoBarS: Fast Reweighted Sampling for Polygons in any Dimension ",
  FontSlant->"Italic"],
 "(Cantarella and Schumacher)."
}], "Text",
 CellChangeTimes->{{3.928061402075705*^9, 
  3.928061443806907*^9}},ExpressionUUID->"7febd277-2efa-4602-a01c-\
363e27b6fbf5"],

Cell["\<\
It is possible to add new functions with some effort; a place to start is by \
looking at ExampleFunction.hpp in CoBarS/src/RandomVariables and at the file \
CoBarSLink/LibraryResources/Source/cSampleRandomVariables.m. Please consider \
submitting your new functions as pull requests for the CoBarS and CoBarSLink \
GitHub projects if you\[CloseCurlyQuote]re successful at this. You can also \
look at the code for the random variables above (in \
CoBarS/src/RandomVariables) if you\[CloseCurlyQuote]re curious about exactly \
what they are doing. \
\>", "Text",
 CellChangeTimes->{{3.927961709195452*^9, 3.92796174477214*^9}, {
  3.927961797475091*^9, 3.927961799844505*^9}, {3.927961833328912*^9, 
  3.927961909778632*^9}, {3.927962007987113*^9, 3.9279620101152*^9}, {
  3.92806147260979*^9, 3.928061474377332*^9}, {3.9280615747295713`*^9, 
  3.928061609703568*^9}, {3.9280629777286043`*^9, 3.928062981219596*^9}, {
  3.9280630427637453`*^9, 
  3.928063162379382*^9}},ExpressionUUID->"a185d859-3631-4909-ba32-\
9a9b03247fb8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["How not to call CoBarSample", "Subsection",
 CellChangeTimes->{{3.927962028234644*^9, 
  3.927962034559561*^9}},ExpressionUUID->"4525cbc8-6c23-4792-9b3d-\
e0f607157b73"],

Cell["\<\
Several things can go wrong when you call CoBarSample. For example, the \
edgelength vector r must have the property that no single edge has more than \
half the total length of the polygon.\
\>", "Text",
 CellChangeTimes->{{3.879947364226242*^9, 3.879947393964572*^9}, {
  3.879948548033282*^9, 3.879948552033725*^9}, {3.92796204706102*^9, 
  3.927962067443549*^9}},ExpressionUUID->"339b9a60-ab4b-4119-a112-\
db42742b7b7b"],

Cell[BoxData[
 RowBox[{"result", "=", 
  RowBox[{"CoBarSample", "[", 
   RowBox[{"\"\<Gyradius\>\"", ",", "3", ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "10"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.879947066257532*^9, 3.8799470784515247`*^9}, {
   3.880013002582682*^9, 3.880013003138362*^9}, {3.8800145176831408`*^9, 
   3.8800145231854687`*^9}, {3.8800145802056913`*^9, 3.880014596735558*^9}, 
   3.880025124220018*^9, {3.880211409588235*^9, 3.880211413035837*^9}, {
   3.880211564232324*^9, 3.880211564380082*^9}, {3.906718513712249*^9, 
   3.906718515156498*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"be142f0b-f1e2-4e98-a1af-d6803b8b71bf"],

Cell["\<\
The edges are sampled from spheres of different radii, which can be given in \
several formats. Here are examples for equilateral closed polygons. (Note \
that the sphere radii measure the weight of the different edges, not their \
length, so it\[CloseCurlyQuote]s fine for the radius of one sphere to be more \
than the sum of the radii of the other spheres, as in the last example.)\
\>", "Text",
 CellChangeTimes->{{3.879947364226242*^9, 3.879947393964572*^9}, {
  3.879948548033282*^9, 3.879948552033725*^9}, {3.880188515496945*^9, 
  3.880188524783533*^9}, {3.927962078142613*^9, 3.927962131419477*^9}, {
  3.928055894410598*^9, 
  3.9280560246419277`*^9}},ExpressionUUID->"1fef8fd1-b82b-42fd-a624-\
af3a08a3b36a"],

Cell[BoxData[{
 RowBox[{"result", "=", 
  RowBox[{"CoBarSample", "[", 
   RowBox[{"\"\<Gyradius\>\"", ",", "3", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "10", ",", 
    RowBox[{"\"\<SphereRadii\>\"", "->", "\"\<One\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"result", "=", 
  RowBox[{"CoBarSample", "[", 
   RowBox[{"\"\<Gyradius\>\"", ",", "3", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "10", ",", 
    RowBox[{"\"\<SphereRadii\>\"", "->", "\"\<SymplecticQuotient\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"result", "=", 
  RowBox[{"CoBarSample", "[", 
   RowBox[{"\"\<Gyradius\>\"", ",", "3", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "10", ",", 
    RowBox[{"\"\<SphereRadii\>\"", "->", "\"\<EdgeLengths\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"result", "=", 
  RowBox[{"CoBarSample", "[", 
   RowBox[{"\"\<Gyradius\>\"", ",", "3", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "10", ",", 
    RowBox[{"\"\<SphereRadii\>\"", "->", 
     RowBox[{"{", 
      RowBox[{"5", ",", "1", ",", "1", ",", "1"}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.927962163109861*^9, 3.9279621642964287`*^9}, {
  3.927962236294468*^9, 3.927962250734198*^9}, {3.9280559048793573`*^9, 
  3.92805590805864*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"6a6c1b88-0a9e-4a6b-b8b1-0a63487479c2"],

Cell["\<\
However,  you can\[CloseCurlyQuote]t set \[OpenCurlyDoubleQuote]SphereRadii\
\[CloseCurlyDoubleQuote] to an a different string, or to a vector of numbers \
which has a different number of entries than the number of edges:\
\>", "Text",
 CellChangeTimes->{{3.9279622726735787`*^9, 3.927962351727524*^9}, {
  3.928056051184054*^9, 
  3.928056052261277*^9}},ExpressionUUID->"d3ce2b53-5915-4740-967b-\
15134d368bc5"],

Cell[BoxData[{
 RowBox[{"result", "=", 
  RowBox[{"CoBarSample", "[", 
   RowBox[{"\"\<Gyradius\>\"", ",", "3", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "10", ",", 
    RowBox[{"\"\<SphereRadii\>\"", "->", "anything"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"result", "=", 
  RowBox[{"CoBarSample", "[", 
   RowBox[{"\"\<Gyradius\>\"", ",", "3", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "10", ",", 
    RowBox[{"\"\<SphereRadii\>\"", "->", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.880014592248131*^9, {3.880014656460839*^9, 3.880014740389144*^9}, 
   3.880025121108241*^9, 3.880211420745807*^9, {3.880211562077187*^9, 
   3.88021156222204*^9}, 3.906718517819101*^9, {3.927962322825623*^9, 
   3.927962323133001*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"48e30f7c-8499-41a5-9a67-e2d3be5b2601"],

Cell["\<\
You also get an error if you set the variable to be sampled to something that\
\[CloseCurlyQuote]s not on the list in $CoBarSRandomVariables:\
\>", "Text",
 CellChangeTimes->{{3.927962386073586*^9, 
  3.9279624206862793`*^9}},ExpressionUUID->"2b2680f9-bd18-4cc8-9fc4-\
d6153a5bf7e8"],

Cell[BoxData[
 RowBox[{"result", "=", 
  RowBox[{"CoBarSample", "[", 
   RowBox[{"\"\<Some random text\>\"", ",", "3", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "10"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.880211429009582*^9, 3.88021143981341*^9}, {
   3.880211559634995*^9, 3.880211559827623*^9}, 3.906718520841827*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"46bdc848-9552-4a17-bf9d-9bc35af40496"]
}, Open  ]],

Cell[CellGroupData[{

Cell["How to use the results of CoBarSample:", "Subsection",
 CellChangeTimes->{{3.9279625343188257`*^9, 
  3.927962551645232*^9}},ExpressionUUID->"b266be5d-aa54-476d-9373-\
5a99d0304f35"],

Cell["\<\
Sampling 1 million equilateral 4-gons in 3 dimensional space is very fast-- \
this displays the time required (in seconds):\
\>", "Text",
 CellChangeTimes->{{3.879948679500442*^9, 3.879948694011976*^9}, {
  3.927962565188745*^9, 3.927962581591281*^9}, {3.92796266955089*^9, 
  3.9279626744519873`*^9}},ExpressionUUID->"2579d99e-a9d2-4580-9c59-\
cebb26ca7f94"],

Cell[BoxData[
 RowBox[{"First", "@", 
  RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"result", "=", 
     RowBox[{"CoBarSample", "[", 
      RowBox[{"\"\<Gyradius\>\"", ",", "3", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "1000000"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.906816329772482*^9, 3.906816336186624*^9}, 
   3.906816514068121*^9, {3.927962455984438*^9, 3.927962486143409*^9}, {
   3.9279625592227097`*^9, 3.927962561094905*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"a9f35124-379e-4fc5-ad64-da39c9497b0c"],

Cell[TextData[{
 "The results should lie between ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"1", "/", "2"}], TraditionalForm], "errors" -> {}, "input" -> 
     "1/2", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "cb1d45e0-68e7-4b23-91d9-b693fe3315b6"],
 " (the radius of gyration of the \[OpenCurlyDoubleQuote]folded\
\[CloseCurlyDoubleQuote] 4-gon with two points on top of one another one unit \
away from two points) and ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SqrtBox["2"], "/", "2"}], TraditionalForm], "errors" -> {}, "input" -> 
     "\\sqrt{2}/2", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "ad20e393-19d1-4b51-b39c-d5165f5b90a5"],
 " (the radius of gyration of the \[OpenCurlyDoubleQuote]extended\
\[CloseCurlyDoubleQuote] 4-gon with single points at the ends of a segment of \
length two and a double point in the center of the segment)."
}], "Text",
 CellChangeTimes->{{3.927962680604692*^9, 3.927962750858494*^9}, {
  3.927964524318989*^9, 
  3.9279645833106413`*^9}},ExpressionUUID->"79a8c81d-1fdb-4750-88da-\
be70a745f0d1"],

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"result", ",", "\"\<Wand\>\"", ",", "\"\<CDF\>\"", ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Ticks", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "2"}], ",", 
        RowBox[{
         SqrtBox["2"], "/", "2"}]}], "}"}], ",", "Automatic"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.880211550963018*^9, 3.880211614614382*^9}, 
   3.906718523364368*^9, {3.906723589224946*^9, 3.906723589495153*^9}, {
   3.9068160502157907`*^9, 3.906816057293573*^9}, {3.9277489228617353`*^9, 
   3.9277489241435127`*^9}, {3.927962596729349*^9, 3.927962605951585*^9}, {
   3.928056071428254*^9, 3.928056158441943*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"9fe0844f-7289-46e5-910b-ab2741ab2684"],

Cell["\<\
You can sample several random variables at once with little extra cost, \
although constructing the histogram still takes a surprisingly long time:\
\>", "Text",
 CellChangeTimes->{{3.879948679500442*^9, 3.879948694011976*^9}, {
  3.906723611249613*^9, 3.906723624435445*^9}, {3.927748978434206*^9, 
  3.9277489843259697`*^9}, {3.927749027126861*^9, 
  3.9277490367844877`*^9}},ExpressionUUID->"1f8e58f2-121e-4db2-a966-\
1bc32b4a4aac"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"First", "@", 
   RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"result", "=", 
      RowBox[{"CoBarSample", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Gyradius\>\"", ",", "\"\<SquaredGyradius\>\"", ",", 
          "\"\<TotalCurvature\>\"", ",", 
          RowBox[{"\"\<ChordLength\>\"", "[", 
           RowBox[{"1", ",", "3"}], "]"}]}], "}"}], ",", "3", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
        "1000000"}], "\[IndentingNewLine]", "]"}]}], ";"}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Histogram", "[", 
     RowBox[{"#", ",", "1000", ",", "\"\<PDF\>\""}], "]"}], "&"}], "/@", 
   "result"}], "]"}]}], "Input",
 CellChangeTimes->{{3.90672355372808*^9, 3.906723565230795*^9}, {
  3.906723597878729*^9, 3.906723598175111*^9}, {3.9067257549041557`*^9, 
  3.90672577205529*^9}, {3.906725952923032*^9, 3.906725959647113*^9}, {
  3.906726260562465*^9, 3.9067262624408293`*^9}, {3.906815647458796*^9, 
  3.90681564880821*^9}, {3.9277487427175226`*^9, 3.927748743735643*^9}, {
  3.927748793177037*^9, 3.927748820062236*^9}, {3.927748949379036*^9, 
  3.927749012323384*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"091c9254-a7d4-4dfa-9acf-c10e5d9cec5e"],

Cell[TextData[{
 "In dimension 3,  we can check the chordlength distribution against the \
(known) exact formula for the length of the chord skipping ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["k", "TI"], TraditionalForm], "errors" -> {}, "input" -> "k", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "a77dc370-5a29-4c81-85fc-b39ba26732d5"],
 " edges in an equilateral ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["n", "TI"], TraditionalForm], "errors" -> {}, "input" -> "n", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "abca70f8-a15a-4a21-a291-1655fa2f3253"],
 "-gon  with all edgelengths equal to 1 (here ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["r", "TI"], TraditionalForm], "errors" -> {}, "input" -> "r", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "f76dabdb-2b95-4bf0-bcbd-420540539e1f"],
 " is the variable):"
}], "Text",
 CellChangeTimes->{{3.928056348018352*^9, 3.928056364422326*^9}, {
  3.928056733408962*^9, 3.928056804461237*^9}, {3.928057099069189*^9, 
  3.928057119281369*^9}},ExpressionUUID->"d5f19939-cbac-40cb-abd1-\
02d82f8e9ec0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "ClassicalPDF", "]"}], ";", 
  RowBox[{"ClearAll", "[", "ChordPDFNormalization", "]"}], ";", 
  RowBox[{"ClearAll", "[", "ChordPDF", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ChordPDFNormalization", "[", "n_", "]"}], " ", ":=", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "^", 
           RowBox[{"(", 
            RowBox[{"n", "+", "1"}], ")"}]}], "*", "\[Pi]", "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "-", "3"}], ")"}], "!"}]}], ")"}]}], ")"}], "*", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"k", "+", "1"}], ")"}]}], "*", 
         RowBox[{"Binomial", "[", 
          RowBox[{"n", ",", "k"}], "]"}], "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "-", 
            RowBox[{"2", "k"}]}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"n", "-", "3"}], ")"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "0", ",", 
          RowBox[{"Floor", "[", 
           RowBox[{"n", "/", "2"}], "]"}]}], "}"}]}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ClassicalPDF", "[", 
    RowBox[{"r_", ",", 
     RowBox[{"n_", "/;", 
      RowBox[{"n", ">", "2"}]}]}], "]"}], ":=", " ", 
   RowBox[{
    FractionBox[
     RowBox[{"2", "r"}], 
     RowBox[{
      SuperscriptBox["2", "n"], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "!"}]}]], 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"m", "+", "1"}]], 
       RowBox[{"Binomial", "[", 
        RowBox[{"n", ",", "m"}], "]"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"r", "+", "n", "-", 
          RowBox[{"2", "m"}]}], ")"}], 
        RowBox[{"n", "-", "2"}]], 
       RowBox[{"HeavisideTheta", "[", 
        RowBox[{"r", " ", "+", " ", "n", " ", "-", " ", 
         RowBox[{"2", "m"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ClassicalPDF", "[", 
    RowBox[{"r_", ",", "2"}], "]"}], ":=", " ", 
   RowBox[{
    FractionBox["r", "2"], " ", 
    RowBox[{"DirichletWindow", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"r", "-", "1"}], ")"}], "/", "2"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ChordPDF", "[", 
   RowBox[{"n_", ",", "k_", ",", "r_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"ChordPDFNormalization", "[", "n", "]"}], "  ", 
   FractionBox["1", 
    RowBox[{"4", "\[Pi]", " ", 
     SuperscriptBox["r", "2"]}]], 
   RowBox[{"ClassicalPDF", "[", 
    RowBox[{"r", ",", "k"}], "]"}], "*", 
   RowBox[{"ClassicalPDF", "[", 
    RowBox[{"r", ",", 
     RowBox[{"n", "-", "k"}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.9046679632820873`*^9, 3.904667991677231*^9}, {
  3.904668025166764*^9, 3.904668034828938*^9}, {3.904682317525288*^9, 
  3.904682398351069*^9}, {3.904828989304826*^9, 3.904828995727577*^9}, {
  3.928056374445327*^9, 3.928056449413773*^9}, {3.928056483833115*^9, 
  3.9280564931881638`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"30ddc686-2fa1-4084-96c1-5cf133e3cc1b"],

Cell["So to match the equilateral 5-gon in \[OpenCurlyDoubleQuote]result\
\[CloseCurlyDoubleQuote], we have:", "Text",
 CellChangeTimes->{{3.928056781220315*^9, 
  3.928056818519352*^9}},ExpressionUUID->"c8851d4e-065a-43dc-a9b8-\
f59feca6272d"],

Cell[BoxData[
 RowBox[{"theoreticalChordlength", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"ChordPDF", "[", 
     RowBox[{"5", ",", "2", ",", "r"}], "]"}], ",", 
    RowBox[{"Assumptions", "->", 
     RowBox[{"0", "<", "r", "<", "2"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.928056457084573*^9, 3.9280564728115597`*^9}, {
  3.9280565098309*^9, 3.92805658057003*^9}, {3.928056628169645*^9, 
  3.928056658953194*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"e2e26798-2d3e-48ad-812b-17fadd5b2ec0"],

Cell["and we see they match:", "Text",
 CellChangeTimes->{{3.928056826585033*^9, 
  3.928056829587893*^9}},ExpressionUUID->"45a32825-9f02-4a4c-9e68-\
8fda92afefc9"],

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{
     RowBox[{"result", "[", 
      RowBox[{"\"\<ChordLength\>\"", "[", 
       RowBox[{"1", ",", "3"}], "]"}], "]"}], ",", "1000", ",", 
     "\"\<PDF\>\""}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{"theoreticalChordlength", ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "2"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.928056644734384*^9, 3.928056710183254*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"2f24a985-31d7-4d45-91f3-05c570546ddd"],

Cell[TextData[{
 "Here\[CloseCurlyQuote]s another example of the chordlength distributions \
for 32-gons skipping ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|
    "boxes" -> FormBox["4", TraditionalForm], "errors" -> {}, "input" -> "4", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "f3d5080d-1887-4450-8089-a4a24132c40a"],
 ", ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|
    "boxes" -> FormBox["8", TraditionalForm], "errors" -> {}, "input" -> "8", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "7b470cc6-b2aa-4f28-8a05-236789b7c659"],
 ", and ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|
    "boxes" -> FormBox["12", TraditionalForm], "errors" -> {}, "input" -> 
     "12", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "1772a42d-a705-41b4-b6f2-8a581a6407cf"],
 " edges:"
}], "Text",
 CellChangeTimes->{{3.928056838452517*^9, 3.928056850575938*^9}, {
  3.928056885612087*^9, 
  3.928056897620141*^9}},ExpressionUUID->"71cb69e4-2871-400e-a053-\
74f6f2b7f6fb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"theoreticalChordlengths", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ChordPDF", "[", 
      RowBox[{"32", ",", "k", ",", "r"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "8", ",", "12"}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.928056922604882*^9, 3.928056951166749*^9}, {
  3.928057035585201*^9, 3.928057040105768*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"2cfaa3c0-8bfc-4e8c-be75-59c1dedcfe9e"],

Cell[BoxData[{
 RowBox[{"First", "@", 
  RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"result", "=", 
     RowBox[{"CoBarSample", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"\"\<ChordLength\>\"", "[", 
          RowBox[{"1", ",", 
           RowBox[{"k", "+", "1"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"{", 
            RowBox[{"4", ",", "8", ",", "12"}], "}"}]}], "}"}]}], "]"}], ",", 
       "3", ",", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"1", ",", "32"}], "]"}], ",", "1000000", ",", 
       RowBox[{"\"\<QuotientSpace\>\"", "->", "True"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{"result", ",", "\"\<Wand\>\"", ",", "\"\<PDF\>\"", ",", 
     RowBox[{"ChartLegends", "->", "Automatic"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{"theoreticalChordlengths", ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "12"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.906726913757153*^9, 3.906726976701479*^9}, 
   3.906833292946949*^9, 3.9068333234971867`*^9, 3.9068333571864786`*^9, {
   3.928056873240563*^9, 3.928056880271617*^9}, {3.928056976153947*^9, 
   3.928056995305723*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"00090559-5e4b-4436-9d02-0c43b32a9e5e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sampling in different dimensions:", "Subsection",
 CellChangeTimes->{{3.928057148096972*^9, 
  3.928057154274991*^9}},ExpressionUUID->"3347c475-197c-4ced-b482-\
6015e20ea56f"],

Cell["We can sample in 3D...", "Text",
 CellChangeTimes->{{3.879948679500442*^9, 3.879948694011976*^9}, {
  3.906719348486455*^9, 
  3.906719353266732*^9}},ExpressionUUID->"b205f7e6-b817-4ac3-b30f-\
efa5148a52e8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"result1", "=", 
   RowBox[{"CoBarSample", "[", 
    RowBox[{
     RowBox[{"\"\<ChordLength\>\"", "[", 
      RowBox[{"1", ",", "3"}], "]"}], ",", "3", ",", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"1", ",", "4"}], "]"}], ",", "1000000", ",", 
     RowBox[{"\"\<QuotientSpace\>\"", "->", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"result2", "=", 
    RowBox[{"CoBarSample", "[", 
     RowBox[{
      RowBox[{"\"\<ChordLength\>\"", "[", 
       RowBox[{"1", ",", "3"}], "]"}], ",", "3", ",", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"1", ",", "4"}], "]"}], ",", "1000000", ",", 
      RowBox[{"\"\<QuotientSpace\>\"", "->", "True"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"result1", ",", "result2"}], "}"}], ",", "100", ",", 
   "\"\<PDF\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.8802116315339003`*^9, 3.880211703337992*^9}, {
   3.9067185267718687`*^9, 3.906718528938534*^9}, 3.906725891056414*^9, {
   3.906726112801255*^9, 3.906726122834684*^9}, {3.928058736711445*^9, 
   3.928058772478634*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"27a9b78e-851f-4742-917e-f28c911f7c9b"],

Cell["... we can sample in 4D...", "Text",
 CellChangeTimes->{{3.879948679500442*^9, 3.879948694011976*^9}, {
  3.906719348486455*^9, 
  3.906719378952198*^9}},ExpressionUUID->"343b58c3-2a1a-4cf8-a61b-\
5e07733002a6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"result1", "=", 
   RowBox[{"CoBarSample", "[", 
    RowBox[{
     RowBox[{"\"\<ChordLength\>\"", "[", 
      RowBox[{"1", ",", "3"}], "]"}], ",", "4", ",", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"1", ",", "6"}], "]"}], ",", "1000000", ",", 
     RowBox[{"\"\<QuotientSpace\>\"", "->", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"result2", "=", 
    RowBox[{"CoBarSample", "[", 
     RowBox[{
      RowBox[{"\"\<ChordLength\>\"", "[", 
       RowBox[{"1", ",", "3"}], "]"}], ",", "4", ",", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"1", ",", "6"}], "]"}], ",", "1000000", ",", 
      RowBox[{"\"\<QuotientSpace\>\"", "->", "True"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"result1", ",", "result2"}], "}"}], ",", "100", ",", 
   "\"\<PDF\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.8802116315339003`*^9, 3.880211703337992*^9}, {
   3.880212542796202*^9, 3.880212571159132*^9}, {3.89789879030007*^9, 
   3.897898796319393*^9}, 3.897898831116713*^9, {3.90671853145155*^9, 
   3.90671853277774*^9}, {3.906726072521705*^9, 3.906726129436834*^9}, {
   3.928058789104028*^9, 3.92805878941452*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"3c13a7ec-c6e4-4b48-8dde-3a77d229c0ee"],

Cell["... we can also sample in 2D...", "Text",
 CellChangeTimes->{{3.879948679500442*^9, 3.879948694011976*^9}, {
  3.906719348486455*^9, 
  3.906719401982943*^9}},ExpressionUUID->"aa9aaed5-61c1-4944-bd7b-\
6efc19ab04f6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"result1", "=", 
   RowBox[{"CoBarSample", "[", 
    RowBox[{
     RowBox[{"\"\<ChordLength\>\"", "[", 
      RowBox[{"1", ",", "4"}], "]"}], ",", "2", ",", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"1", ",", "8"}], "]"}], ",", "1000000", ",", 
     RowBox[{"\"\<QuotientSpace\>\"", "->", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"result2", "=", 
    RowBox[{"CoBarSample", "[", 
     RowBox[{
      RowBox[{"\"\<ChordLength\>\"", "[", 
       RowBox[{"1", ",", "4"}], "]"}], ",", "2", ",", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"1", ",", "8"}], "]"}], ",", "1000000", ",", 
      RowBox[{"\"\<QuotientSpace\>\"", "->", "True"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"result1", ",", "result2"}], "}"}], ",", "100", ",", 
   "\"\<PDF\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.8802116315339003`*^9, 3.880211703337992*^9}, {
  3.880212542796202*^9, 3.880212607441923*^9}, {3.88021268854146*^9, 
  3.8802126972677917`*^9}, {3.880212861488468*^9, 3.880212863571593*^9}, {
  3.897898799400159*^9, 3.897898816739088*^9}, {3.906718534221006*^9, 
  3.906718535686451*^9}, {3.906726142766638*^9, 3.906726147291168*^9}, {
  3.90672620390806*^9, 3.90672623586147*^9}, {3.928058802083538*^9, 
  3.9280588023654003`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"2c0ee165-abb9-423c-9e91-5d80ce0fbf65"],

Cell["\<\
... or in any other (not too large) dimension. The libraries will be compiled \
the first time they are called.\
\>", "Text",
 CellChangeTimes->{{3.879948679500442*^9, 3.879948694011976*^9}, {
  3.906719348486455*^9, 3.906719444538625*^9}, {3.928057197762991*^9, 
  3.928057198961989*^9}},ExpressionUUID->"4031d5d0-ce9d-4622-86e0-\
c9300bdc8f03"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"result1", "=", 
   RowBox[{"CoBarSample", "[", 
    RowBox[{
     RowBox[{"\"\<ChordLength\>\"", "[", 
      RowBox[{"1", ",", "8"}], "]"}], ",", "6", ",", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"1", ",", "32"}], "]"}], ",", "1000000", ",", 
     RowBox[{"\"\<QuotientSpace\>\"", "->", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"result2", "=", 
    RowBox[{"CoBarSample", "[", 
     RowBox[{
      RowBox[{"\"\<ChordLength\>\"", "[", 
       RowBox[{"1", ",", "8"}], "]"}], ",", "6", ",", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"1", ",", "32"}], "]"}], ",", "1000000", ",", 
      RowBox[{"\"\<QuotientSpace\>\"", "->", "True"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"result1", ",", "result2"}], "}"}], ",", "100", ",", 
   "\"\<PDF\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.92805881626327*^9, 3.9280588165445137`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"1af82131-993b-438e-8d09-0d677e303fe0"],

Cell["\<\
FYI: This lists the paths of the dynamic libraries generated:\
\>", "Text",
 CellChangeTimes->{{3.879948679500442*^9, 3.879948694011976*^9}, {
   3.880212748509234*^9, 3.880212770362232*^9}, {3.880212814598605*^9, 
   3.880212819149601*^9}, 3.90671927984197*^9, {3.928057206005493*^9, 
   3.928057207434458*^9}},ExpressionUUID->"6e420b95-6857-4873-83c1-\
e4e18f5e9110"],

Cell[BoxData[
 RowBox[{"CoBarSLink`Private`listLibraries", "[", "]"}]], "Input",
 CellChangeTimes->{{3.906719266963923*^9, 3.906719267552031*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"0af92f7d-4ffb-486c-ba67-bb383883aded"],

Cell["This deletes the libraries and restarts the package:", "Text",
 CellChangeTimes->{{3.879948679500442*^9, 3.879948694011976*^9}, {
  3.880212748509234*^9, 
  3.880212802610965*^9}},ExpressionUUID->"9efc36c1-0e99-4a65-9469-\
8849d77e405e"],

Cell[BoxData[
 RowBox[{"CoBarSLink`Private`clearLibraries", "[", "]"}]], "Input",
 CellChangeTimes->{{3.880100762195559*^9, 3.8801007663557596`*^9}, {
  3.906718551166019*^9, 3.9067185516683683`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"bc8dabf5-78c1-49de-87c1-60db308cc9c5"],

Cell[BoxData[
 RowBox[{"CoBarSLink`Private`listLibraries", "[", "]"}]], "Input",
 CellChangeTimes->{3.906719324476439*^9},
 CellLabel->"In[42]:=",ExpressionUUID->"72b4bec8-91bb-47f7-8223-ae4137b4b191"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
CoBarConfidenceSample: Computing the value of a sample mean to a confidence \
level\
\>", "Section",
 CellChangeTimes->{{3.9280619982967653`*^9, 3.928062004346841*^9}, {
  3.928062101187912*^9, 
  3.9280621126374197`*^9}},ExpressionUUID->"e89060f1-19c0-4c16-a531-\
8fb555d72020"],

Cell[TextData[{
 "CoBarSample computes the sample mean of a specified ",
 StyleBox["number ",
  FontSlant->"Italic"],
 "of samples. But often, you want to compute \[OpenCurlyDoubleQuote]however \
many samples it requires to compute the mean to within some error with a \
fixed confidence level\[CloseCurlyDoubleQuote]. For this, we can use "
}], "Text",
 CellChangeTimes->{{3.928062122819503*^9, 
  3.9280622113697987`*^9}},ExpressionUUID->"97849987-ef66-40af-b1e1-\
9fb1f88aa6c2"],

Cell[BoxData[
 RowBox[{"?", "CoBarConfidenceSample"}]], "Input",
 CellChangeTimes->{{3.928062212738875*^9, 3.928062214265546*^9}, {
  3.928062265730332*^9, 3.928062268063911*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"09655602-8956-41ef-8374-b4d454ac3d7f"],

Cell["\<\
CoBarConfidence sample uses the same random variables as CoBarSample. For \
example, we can compute the squared gyradius of equilateral 16-gons to within \
\[PlusMinus] 0.0001 with 0.999 confidence level with the code below. This is \
asking a lot of Monte Carlo integration, so it takes a little time:\
\>", "Text",
 CellChangeTimes->{{3.928062332181447*^9, 3.928062397148303*^9}, {
  3.928062690824871*^9, 
  3.928062829149893*^9}},ExpressionUUID->"1638629c-f970-4b43-99d9-\
2dc5ff3dd05f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "16"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"1.0", ",", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"CoBarConfidenceSample", "[", 
    RowBox[{
    "\"\<SquaredGyradius\>\"", ",", "\[IndentingNewLine]", "d", ",", "r", ",",
      "0.0001", ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<SphereRadii\>\"", "\[Rule]", "\"\<SymplecticQuotient\>\""}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<QuotientSpace\>\"", "\[Rule]", "True"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<ConfidenceLevel\>\"", "->", "0.999"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<MaxSamples\>\"", "->", "1000000000"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<ChunkSize\>\"", "->", "10000000"}]}], "\[IndentingNewLine]",
     "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.928062383270578*^9, 3.928062407646799*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"679e6627-57b8-4d0b-8b1e-21c84895ee26"],

Cell[BoxData[
 RowBox[{"data", "[", "\"\<SampleMean\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.928062558773924*^9, 3.928062563169736*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"d04ae1f7-3479-49c0-bf9e-6656d74322cc"],

Cell["We know the theoretical expectation:", "Text",
 CellChangeTimes->{{3.928062586258586*^9, 
  3.928062592889826*^9}},ExpressionUUID->"3d5e8a8d-38b8-4eca-9854-\
1137b9b0f7ec"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TheoreticalSquaredRadiusOfGyrationExpectation", "[", "n_", "]"}], ":=",
   " ", 
  FractionBox[
   RowBox[{"n", "+", "1"}], "12"]}]], "Input",
 CellChangeTimes->{{3.928058293895031*^9, 3.928058314104168*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"cfd98a1b-bb60-4e3d-9546-d66d1679d6b2"],

Cell["so", "Text",
 CellChangeTimes->{{3.92806264443403*^9, 
  3.928062644804266*^9}},ExpressionUUID->"3601151c-215d-478f-bc02-\
ee03d0987d93"],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"TheoreticalSquaredRadiusOfGyrationExpectation", "[", "16", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.92806264638081*^9, 3.928062647589489*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"a413ff16-8ebd-479c-9938-dbedf5345e59"],

Cell["and we see that ", "Text",
 CellChangeTimes->{{3.928062611286665*^9, 
  3.9280626128577547`*^9}},ExpressionUUID->"2768d7c6-eceb-4e52-870a-\
ee74cbfd588d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{
    RowBox[{"TheoreticalSquaredRadiusOfGyrationExpectation", "[", "16", "]"}],
     " ", "-", " ", 
    RowBox[{"data", "[", "\"\<SampleMean\>\"", "]"}]}], "]"}], " ", "<", " ", 
  
  RowBox[{"data", "[", "\"\<PrescribedError\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.928062595897768*^9, 3.928062619281384*^9}, {
  3.928062651849502*^9, 3.9280626581597843`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"cb42d7a8-2c6e-4ba3-a075-93ef46613f32"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
RandomClosedPolygons: generating (weighted) polygon samples very fast\
\>", "Section",
 CellChangeTimes->{
  3.9280572943472767`*^9, {3.928057337115775*^9, 3.928057352058257*^9}, {
   3.928058393274105*^9, 
   3.928058406912973*^9}},ExpressionUUID->"13c1038d-a14a-4918-b64c-\
caf4029d65d2"],

Cell["\<\
If you are measuring something about the polygons which you don\
\[CloseCurlyQuote]t want to code and add to CoBarSample, you can get the \
polygons themselves using RandomClosedPolygons:\
\>", "Text",
 CellChangeTimes->{{3.928057244582613*^9, 3.92805729299461*^9}, {
  3.928057353990622*^9, 
  3.9280573567426577`*^9}},ExpressionUUID->"e1279472-473b-4abb-926d-\
c57cc7c56642"],

Cell[BoxData[
 RowBox[{"?", "RandomClosedPolygons"}]], "Input",
 CellChangeTimes->{{3.928058400073391*^9, 3.928058409642839*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"486907f8-a278-4e6b-9586-0c74d401c9d6"],

Cell[TextData[{
 "Since the polygons (especially for large ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["n", "TI"], TraditionalForm], "errors" -> {}, "input" -> "n", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "a3ce96d3-73bf-484a-b539-210f367d5676"],
 ") can take up a lot of memory, large experiments (",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SuperscriptBox["10", "7"], TraditionalForm], "errors" -> {}, "input" -> 
     "10^7", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "fb4f41eb-2333-4e4d-bcc3-6c8fe262263d"],
 " polygons and up) should process the polygons in blocks and store the \
results. However, for smallish experiments, you can just generate a list of \
polygons (and weights) and process them in one go. For example, here are ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SuperscriptBox["10", "6"], TraditionalForm], "errors" -> {}, "input" -> 
     "10^6", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "c31b4b15-9f12-4633-aefc-186551bd9a0b"],
 " ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|
    "boxes" -> FormBox["64", TraditionalForm], "errors" -> {}, "input" -> 
     "64", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "29cca660-1303-4bec-96de-7b874c1150d8"],
 "-gons in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", "3"], TraditionalForm]],
  ExpressionUUID->"744d0ecf-a7b5-4b2d-bdf7-b18c8a5cbfa5"],
 ":"
}], "Text",
 CellChangeTimes->{{3.9280573681083612`*^9, 
  3.928057519676671*^9}},ExpressionUUID->"65803662-d732-4a00-bb7d-\
fb939cd435d4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "64"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"samplecount", "=", "1000000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dataCoBarS", "=", 
     RowBox[{"RandomClosedPolygons", "[", 
      RowBox[{"d", ",", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"1.", ",", "n"}], "]"}], ",", "samplecount", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<QuotientSpace\>\"", "->", "True"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<SphereRadii\>\"", "->", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"1.", ",", "n"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "//", "AbsoluteTiming"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"dataCoBarS", "//", "Keys"}]}], "Input",
 CellLabel->"In[88]:=",ExpressionUUID->"a2d1f46d-2050-46f4-b8f8-8b88c137456c"],

Cell["\<\
The generated polygons are not only closed, they are also translated so that \
their center of mass lies in the origin.\
\>", "Text",
 CellChangeTimes->{{3.928057537809698*^9, 
  3.9280575422515163`*^9}},ExpressionUUID->"7373dd2a-d081-4bb3-93b2-\
81cc889bfff6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"centersofmass", "=", 
   RowBox[{"Mean", "/@", 
    RowBox[{
     RowBox[{"dataCoBarS", "[", "\"\<VertexPositions\>\"", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"1", ";;", 
        RowBox[{"-", "2"}]}]}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Max", "[", 
  RowBox[{"Norm", "/@", "centersofmass"}], "]"}]}], "Input",
 CellLabel->"In[93]:=",ExpressionUUID->"39f73135-2e28-40d8-b033-029130a02594"],

Cell[TextData[{
 "Because the center of mass lies at the origin, we can compute the squared \
radius of gyration\n\n\t",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubsuperscriptBox[
          StyleBox["R", "TI"], 
          StyleBox["g", "TI"], "2"], 
         RowBox[{"(", 
           StyleBox["X", "TI"], ")"}], "\[LongEqual]", 
         FractionBox["1", 
          StyleBox["n", "TI"]], 
         UnderoverscriptBox["\[Sum]", 
          RowBox[{
            StyleBox["i", "TI"], "\[LongEqual]", "1"}], 
          StyleBox["n", "TI"], LimitsPositioning -> True], 
         "\[DoubleVerticalBar]", 
         SubscriptBox[
          StyleBox["x", "TI"], 
          StyleBox["i", "TI"]], 
         SuperscriptBox["\[DoubleVerticalBar]", "2"], "-", 
         "\[DoubleVerticalBar]", 
         FractionBox["1", 
          StyleBox["n", "TI"]], 
         UnderoverscriptBox["\[Sum]", 
          RowBox[{
            StyleBox["i", "TI"], "\[LongEqual]", "1"}], 
          StyleBox["n", "TI"], LimitsPositioning -> True], 
         SubscriptBox[
          StyleBox["x", "TI"], 
          StyleBox["i", "TI"]], 
         SuperscriptBox["\[DoubleVerticalBar]", "2"]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "R^2_g(X) = \\frac{1}{n} \\sum_{i=1}^n \\| x_i \\|^2 - \\| \\frac{1}{n} \
\\sum_{i=1}^n x_i \\|^2", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "ef630fd9-b885-4635-9f8f-4d783fda16b7"]
}], "Text",
 CellChangeTimes->{{3.928057662772051*^9, 3.928057675070809*^9}, {
  3.928057723569515*^9, 
  3.928057730320966*^9}},ExpressionUUID->"560311f9-e098-49a6-ad7f-\
255d55242190"],

Cell["by just computing the first term. ", "Text",
 CellChangeTimes->{{3.928057716470662*^9, 3.928057721544609*^9}, 
   3.9280578957257357`*^9},ExpressionUUID->"53fd3a9c-79fe-40c6-98b7-\
a021cb7cc3ff"],

Cell[BoxData[
 RowBox[{
  RowBox[{"squaredGyradii", "=", 
   RowBox[{
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"dataCoBarS", "[", 
        RowBox[{"[", 
         RowBox[{"\"\<VertexPositions\>\"", ",", "All", ",", 
          RowBox[{"1", ";;", "n"}]}], "]"}], "]"}], "^", "2"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "/", "n"}]}], ";"}]], "Input",\

 CellLabel->"In[98]:=",ExpressionUUID->"7104ecef-773b-4fa0-a3af-b98920b82f6c"],

Cell["\<\
To compute the sampling mean you have to use the \
\[OpenCurlyDoubleQuote]SamplingWeights\[CloseCurlyDoubleQuote] in the \
returned data structure as follows:\
\>", "Text",ExpressionUUID->"32f151e6-67da-4ce4-8269-4d2527c391a3"],

Cell[BoxData[
 RowBox[{"Mean", "[", 
  RowBox[{"WeightedData", "[", 
   RowBox[{"squaredGyradii", ",", 
    RowBox[{"dataCoBarS", "[", "\"\<SamplingWeights\>\"", "]"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9280580547908487`*^9, 3.9280580555693293`*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"eaf6e9a6-8356-4d09-bb3f-86cd46e158fe"],

Cell["This is the same as ", "Text",
 CellChangeTimes->{{3.9280580620431633`*^9, 
  3.928058064970299*^9}},ExpressionUUID->"e96c649d-d607-429d-b0cb-\
659d6da05e0a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"squaredGyradii", ".", 
   RowBox[{"dataCoBarS", "[", "\"\<SamplingWeights\>\"", "]"}]}], "/", 
  RowBox[{"Total", "[", 
   RowBox[{"dataCoBarS", "[", "\"\<SamplingWeights\>\"", "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9280579141449614`*^9, 3.9280579146001387`*^9}, 
   3.928057962997407*^9, {3.928057994723509*^9, 3.9280579963289137`*^9}, {
   3.928058029215562*^9, 3.928058031001903*^9}, {3.9280580709350433`*^9, 
   3.928058072985367*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"2b8ae390-1d2e-4e4f-9891-b5eb2d14d0c6"],

Cell["(which runs faster). ", "Text",
 CellChangeTimes->{{3.928058079341567*^9, 
  3.928058085956538*^9}},ExpressionUUID->"3922811b-c408-4fd6-b2a9-\
d2a24601cdb3"],

Cell["Note that this is very close to the theoretical expectation:", "Text",
 CellChangeTimes->{{3.928058287181158*^9, 3.9280582924651833`*^9}, {
  3.928058332951996*^9, 
  3.928058368495256*^9}},ExpressionUUID->"21ff01a9-ab57-4144-983d-\
5492af539140"],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"TheoreticalSquaredRadiusOfGyrationExpectation", "[", "64", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.928058320605053*^9, 3.928058324639448*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"608afb7a-588f-4be0-9399-6d9079b60a66"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "ActionAngleSample: Generating direct polygon samples of equilateral \
polygons in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", "3"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "d9ff0531-6ccd-4d72-9039-88750cefa6d5"],
 " (more slowly)"
}], "Section",
 CellChangeTimes->{{3.9280583840889063`*^9, 3.928058422153248*^9}, {
  3.928058464755734*^9, 
  3.928058478246298*^9}},ExpressionUUID->"8648563f-ab54-4e31-91af-\
b6227f71fc79"],

Cell[TextData[{
 "You can also use the Progressive Action Angle Method to generate \
equilateral closed polygons with unit edgelengths in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", "3"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "db20a839-f63e-4299-b810-c838abd8da99"],
 ". These samples are perfect, so weights are not required. However, the \
process is slower and only works for unit edgelengths and 3-dimensional space."
}], "Text",
 CellChangeTimes->{{3.928058426470004*^9, 
  3.928058547296937*^9}},ExpressionUUID->"e5595792-7fe1-4504-8ace-\
1354d68cd202"],

Cell[BoxData[
 RowBox[{"?", "ActionAngleSample"}]], "Input",
 CellLabel->
  "In[115]:=",ExpressionUUID->"f0207a93-8580-447d-b284-635beb1fc77c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "64"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"samplecount", "=", "1000000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dataPAAM", "=", 
     RowBox[{"ActionAngleSample", "[", 
      RowBox[{"n", ",", "samplecount"}], "]"}]}], ";"}], "//", 
   "AbsoluteTiming"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"dataPAAM", "//", "Keys"}]}], "Input",
 CellChangeTimes->{{3.92805859945115*^9, 3.928058607048127*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"4d7367f2-f230-4d88-9277-383f482debd8"],

Cell["These polygons also  have center of mass at the origin:", "Text",
 CellChangeTimes->{{3.927749274915309*^9, 
  3.927749287598605*^9}},ExpressionUUID->"fe4630fb-7835-4c0a-85f9-\
169ddc2e1f1d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"centersofmass", "=", 
   RowBox[{"Mean", "/@", 
    RowBox[{
     RowBox[{"dataPAAM", "[", "\"\<VertexPositions\>\"", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"1", ";;", "n"}]}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Max", "[", 
  RowBox[{"Norm", "/@", "centersofmass"}], "]"}]}], "Input",
 CellChangeTimes->{{3.928058618536438*^9, 3.928058619055419*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"fdfd72db-a751-4c51-af6e-5f8be3d0de6d"],

Cell["Again, the squared gyradius is easy to compute", "Text",
 CellChangeTimes->{{3.92805864104467*^9, 
  3.928058661142242*^9}},ExpressionUUID->"665a2ec6-dc86-488b-9bf6-\
13fa64a356d0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"squaredGyradii", "=", 
   RowBox[{
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"dataPAAM", "[", "\"\<VertexPositions\>\"", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"1", ";;", "n"}]}], "]"}], "]"}], "^", "2"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "/", "n"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.928058630500486*^9, 3.9280586311868*^9}, {
  3.928058666035411*^9, 3.928058666521796*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"2ea07ba9-f309-4dfb-8f52-0456a98cc5c3"],

Cell[TextData[{
 "This time, we ",
 StyleBox["don\[CloseCurlyQuote]t",
  FontSlant->"Italic"],
 " use WeightedData; we just take the sample mean:"
}], "Text",
 CellChangeTimes->{{3.928058672117498*^9, 
  3.928058704684828*^9}},ExpressionUUID->"b7f3c562-0596-4cde-bbdb-\
fa32dc3bc390"],

Cell[BoxData[
 RowBox[{"samplingAverage", "=", 
  RowBox[{"Mean", "[", "squaredGyradii", "]"}]}]], "Input",
 CellLabel->
  "In[130]:=",ExpressionUUID->"1ed4288b-793b-4d82-afa8-ce6a77e6d062"],

Cell["and again we get a result close to the exact expectation:", "Text",
 CellChangeTimes->{{3.928058706656364*^9, 
  3.92805871624969*^9}},ExpressionUUID->"26a26ae7-4d53-4818-9783-\
ede38c5cd11a"],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"TheoreticalSquaredRadiusOfGyrationExpectation", "[", "n", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.92805869150126*^9, 3.928058698168085*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"2a554c43-676d-4507-8a1c-4419da5f773e"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1028, 634},
WindowMargins->{{Automatic, 189}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"14.0 for Mac OS X ARM (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"7a5914a0-9202-413d-83d2-8d5cece86b88"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 180, 3, 98, "Title",ExpressionUUID->"3a146095-5861-4a45-b28c-af45c3a1b403"],
Cell[763, 27, 386, 8, 58, "Text",ExpressionUUID->"a59958e2-df4d-442a-b6a9-14a573f8451c"],
Cell[1152, 37, 108, 1, 30, "Input",ExpressionUUID->"f4a2300d-b07c-4d44-bd02-bdd16cb87718"],
Cell[CellGroupData[{
Cell[1285, 42, 164, 3, 67, "Section",ExpressionUUID->"b2a6aab9-7985-4628-ae85-872f29fe46b3"],
Cell[1452, 47, 295, 6, 35, "Text",ExpressionUUID->"623ae2a1-c16a-4d52-ab94-aa47a7fecadd"],
Cell[1750, 55, 766, 16, 52, "Input",ExpressionUUID->"2e901413-b913-4d3e-8981-340bec02670f"],
Cell[2519, 73, 240, 6, 35, "Text",ExpressionUUID->"049ed49e-f68c-4ab3-9356-0b16a4906846"],
Cell[2762, 81, 128, 0, 35, "Text",ExpressionUUID->"9fd8f8d3-d36a-4ad7-abc3-d69431d77dfa"],
Cell[2893, 83, 133, 2, 30, "Input",ExpressionUUID->"ed9fc385-f53d-45d6-bdf4-f43defaf87f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3063, 90, 204, 3, 67, "Section",ExpressionUUID->"d72aa303-1363-4348-94cc-e7ee0661f203"],
Cell[3270, 95, 120, 0, 35, "Text",ExpressionUUID->"23acb972-f7c6-4df9-a9ca-1fa419d217fc"],
Cell[3393, 97, 132, 2, 30, "Input",ExpressionUUID->"8640ef3e-00d9-465a-865c-a2289b7ba012"],
Cell[CellGroupData[{
Cell[3550, 103, 192, 3, 54, "Subsection",ExpressionUUID->"567ee4b6-06a4-4173-8495-e612119baa30"],
Cell[3745, 108, 651, 11, 58, "Text",ExpressionUUID->"30007743-99eb-49bc-bd6d-485e0fe49db9"],
Cell[4399, 121, 192, 2, 30, "Input",ExpressionUUID->"8b9d583b-3060-49a4-bc3e-8fe98ce28cc9"],
Cell[4594, 125, 2178, 53, 110, "Text",ExpressionUUID->"49934a42-975c-435d-be2c-fba3a7a9c58b"],
Cell[6775, 180, 1485, 37, 60, "Text",ExpressionUUID->"348f890b-5326-4f8e-ab6c-92294d62743f"],
Cell[8263, 219, 755, 18, 37, "Text",ExpressionUUID->"807a2b2e-48b3-437f-aa91-9bcde1d49bf8"],
Cell[9021, 239, 861, 21, 37, "Text",ExpressionUUID->"1ce72956-b65e-424c-a78c-dc29bd44375b"],
Cell[9885, 262, 1963, 55, 37, "Text",ExpressionUUID->"60fdc762-c717-447c-adb0-384db15aa1ec"],
Cell[11851, 319, 836, 21, 37, "Text",ExpressionUUID->"63c532f6-e400-4a24-9390-f3225af39919"],
Cell[12690, 342, 778, 18, 60, "Text",ExpressionUUID->"482344d8-3db4-4cb8-98ed-e12e4bcbbb44"],
Cell[13471, 362, 377, 7, 35, "Text",ExpressionUUID->"167d2e9f-5c72-40b7-905d-1b390698e0b4"],
Cell[13851, 371, 724, 18, 58, "Text",ExpressionUUID->"8bc6c0d8-6707-46ca-9f34-62b3159b4d22"],
Cell[14578, 391, 720, 18, 61, "Text",ExpressionUUID->"7febd277-2efa-4602-a01c-363e27b6fbf5"],
Cell[15301, 411, 1037, 17, 104, "Text",ExpressionUUID->"a185d859-3631-4909-ba32-9a9b03247fb8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16375, 433, 175, 3, 54, "Subsection",ExpressionUUID->"4525cbc8-6c23-4792-9b3d-e0f607157b73"],
Cell[16553, 438, 434, 8, 58, "Text",ExpressionUUID->"339b9a60-ab4b-4119-a112-db42742b7b7b"],
Cell[16990, 448, 697, 13, 30, "Input",ExpressionUUID->"be142f0b-f1e2-4e98-a1af-d6803b8b71bf"],
Cell[17690, 463, 729, 12, 81, "Text",ExpressionUUID->"1fef8fd1-b82b-42fd-a624-af3a08a3b36a"],
Cell[18422, 477, 1500, 34, 94, "Input",ExpressionUUID->"6a6c1b88-0a9e-4a6b-b8b1-0a63487479c2"],
Cell[19925, 513, 422, 8, 58, "Text",ExpressionUUID->"d3ce2b53-5915-4740-967b-15134d368bc5"],
Cell[20350, 523, 960, 21, 52, "Input",ExpressionUUID->"48e30f7c-8499-41a5-9a67-e2d3be5b2601"],
Cell[21313, 546, 293, 6, 35, "Text",ExpressionUUID->"2b2680f9-bd18-4cc8-9fc4-d6153a5bf7e8"],
Cell[21609, 554, 451, 9, 30, "Input",ExpressionUUID->"46bdc848-9552-4a17-bf9d-9bc35af40496"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22097, 568, 188, 3, 54, "Subsection",ExpressionUUID->"b266be5d-aa54-476d-9373-5a99d0304f35"],
Cell[22288, 573, 369, 7, 35, "Text",ExpressionUUID->"2579d99e-a9d2-4580-9c59-cebb26ca7f94"],
Cell[22660, 582, 651, 13, 73, "Input",ExpressionUUID->"a9f35124-379e-4fc5-ad64-da39c9497b0c"],
Cell[23314, 597, 1214, 27, 90, "Text",ExpressionUUID->"79a8c81d-1fdb-4750-88da-be70a745f0d1"],
Cell[24531, 626, 977, 24, 38, "Input",ExpressionUUID->"9fe0844f-7289-46e5-910b-ab2741ab2684"],
Cell[25511, 652, 445, 8, 35, "Text",ExpressionUUID->"1f8e58f2-121e-4db2-a966-1bc32b4a4aac"],
Cell[25959, 662, 1455, 32, 157, "Input",ExpressionUUID->"091c9254-a7d4-4dfa-9acf-c10e5d9cec5e"],
Cell[27417, 696, 1314, 31, 58, "Text",ExpressionUUID->"d5f19939-cbac-40cb-abd1-02d82f8e9ec0"],
Cell[28734, 729, 3545, 105, 212, "Input",ExpressionUUID->"30ddc686-2fa1-4084-96c1-5cf133e3cc1b"],
Cell[32282, 836, 244, 4, 35, "Text",ExpressionUUID->"c8851d4e-065a-43dc-a9b8-f59feca6272d"],
Cell[32529, 842, 530, 11, 30, "Input",ExpressionUUID->"e2e26798-2d3e-48ad-812b-17fadd5b2ec0"],
Cell[33062, 855, 164, 3, 35, "Text",ExpressionUUID->"45a32825-9f02-4a4c-9e68-8fda92afefc9"],
Cell[33229, 860, 643, 15, 94, "Input",ExpressionUUID->"2f24a985-31d7-4d45-91f3-05c570546ddd"],
Cell[33875, 877, 1105, 31, 37, "Text",ExpressionUUID->"71cb69e4-2871-400e-a053-74f6f2b7f6fb"],
Cell[34983, 910, 551, 14, 30, "Input",ExpressionUUID->"2cfaa3c0-8bfc-4e8c-be75-59c1dedcfe9e"],
Cell[35537, 926, 1526, 36, 178, "Input",ExpressionUUID->"00090559-5e4b-4436-9d02-0c43b32a9e5e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37100, 967, 181, 3, 54, "Subsection",ExpressionUUID->"3347c475-197c-4ced-b482-6015e20ea56f"],
Cell[37284, 972, 213, 4, 35, "Text",ExpressionUUID->"b205f7e6-b817-4ac3-b30f-efa5148a52e8"],
Cell[37500, 978, 1286, 31, 94, "Input",ExpressionUUID->"27a9b78e-851f-4742-917e-f28c911f7c9b"],
Cell[38789, 1011, 217, 4, 35, "Text",ExpressionUUID->"343b58c3-2a1a-4cf8-a61b-5e07733002a6"],
Cell[39009, 1017, 1376, 32, 94, "Input",ExpressionUUID->"3c13a7ec-c6e4-4b48-8dde-3a77d229c0ee"],
Cell[40388, 1051, 222, 4, 35, "Text",ExpressionUUID->"aa9aaed5-61c1-4944-bd7b-6efc19ab04f6"],
Cell[40613, 1057, 1499, 34, 94, "Input",ExpressionUUID->"2c0ee165-abb9-423c-9e91-5d80ce0fbf65"],
Cell[42115, 1093, 356, 7, 35, "Text",ExpressionUUID->"4031d5d0-ce9d-4622-86e0-c9300bdc8f03"],
Cell[42474, 1102, 1113, 28, 94, "Input",ExpressionUUID->"1af82131-993b-438e-8d09-0d677e303fe0"],
Cell[43590, 1132, 379, 7, 35, "Text",ExpressionUUID->"6e420b95-6857-4873-83c1-e4e18f5e9110"],
Cell[43972, 1141, 225, 3, 30, "Input",ExpressionUUID->"0af92f7d-4ffb-486c-ba67-bb383883aded"],
Cell[44200, 1146, 243, 4, 35, "Text",ExpressionUUID->"9efc36c1-0e99-4a65-9469-8849d77e405e"],
Cell[44446, 1152, 279, 4, 30, "Input",ExpressionUUID->"bc8dabf5-78c1-49de-87c1-60db308cc9c5"],
Cell[44728, 1158, 201, 3, 30, "Input",ExpressionUUID->"72b4bec8-91bb-47f7-8223-ae4137b4b191"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[44978, 1167, 289, 7, 105, "Section",ExpressionUUID->"e89060f1-19c0-4c16-a531-8fb555d72020"],
Cell[45270, 1176, 481, 10, 58, "Text",ExpressionUUID->"97849987-ef66-40af-b1e1-9fb1f88aa6c2"],
Cell[45754, 1188, 258, 4, 30, "Input",ExpressionUUID->"09655602-8956-41ef-8374-b4d454ac3d7f"],
Cell[46015, 1194, 501, 9, 58, "Text",ExpressionUUID->"1638629c-f970-4b43-99d9-2dc5ff3dd05f"],
Cell[46519, 1205, 1148, 26, 241, "Input",ExpressionUUID->"679e6627-57b8-4d0b-8b1e-21c84895ee26"],
Cell[47670, 1233, 219, 3, 30, "Input",ExpressionUUID->"d04ae1f7-3479-49c0-bf9e-6656d74322cc"],
Cell[47892, 1238, 178, 3, 35, "Text",ExpressionUUID->"3d5e8a8d-38b8-4eca-9854-1137b9b0f7ec"],
Cell[48073, 1243, 322, 7, 46, "Input",ExpressionUUID->"cfd98a1b-bb60-4e3d-9546-d66d1679d6b2"],
Cell[48398, 1252, 143, 3, 35, "Text",ExpressionUUID->"3601151c-215d-478f-bc02-ee03d0987d93"],
Cell[48544, 1257, 274, 5, 30, "Input",ExpressionUUID->"a413ff16-8ebd-479c-9938-dbedf5345e59"],
Cell[48821, 1264, 160, 3, 35, "Text",ExpressionUUID->"2768d7c6-eceb-4e52-870a-ee74cbfd588d"],
Cell[48984, 1269, 503, 11, 30, "Input",ExpressionUUID->"cb42d7a8-2c6e-4ba3-a075-93ef46613f32"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49524, 1285, 300, 7, 67, "Section",ExpressionUUID->"13c1038d-a14a-4918-b64c-caf4029d65d2"],
Cell[49827, 1294, 387, 8, 58, "Text",ExpressionUUID->"e1279472-473b-4abb-926d-c57cc7c56642"],
Cell[50217, 1304, 212, 4, 30, "Input",ExpressionUUID->"486907f8-a278-4e6b-9586-0c74d401c9d6"],
Cell[50432, 1310, 1769, 44, 85, "Text",ExpressionUUID->"65803662-d732-4a00-bb7d-fb939cd435d4"],
Cell[52204, 1356, 978, 24, 199, "Input",ExpressionUUID->"a2d1f46d-2050-46f4-b8f8-8b88c137456c"],
Cell[53185, 1382, 271, 6, 35, "Text",ExpressionUUID->"7373dd2a-d081-4bb3-93b2-81cc889bfff6"],
Cell[53459, 1390, 487, 13, 52, "Input",ExpressionUUID->"39f73135-2e28-40d8-b033-029130a02594"],
Cell[53949, 1405, 1678, 43, 106, "Text",ExpressionUUID->"560311f9-e098-49a6-ad7f-255d55242190"],
Cell[55630, 1450, 201, 3, 35, "Text",ExpressionUUID->"53fd3a9c-79fe-40c6-98b7-a021cb7cc3ff"],
Cell[55834, 1455, 494, 14, 30, "Input",ExpressionUUID->"7104ecef-773b-4fa0-a3af-b98920b82f6c"],
Cell[56331, 1471, 237, 4, 35, "Text",ExpressionUUID->"32f151e6-67da-4ce4-8269-4d2527c391a3"],
Cell[56571, 1477, 350, 8, 30, "Input",ExpressionUUID->"eaf6e9a6-8356-4d09-bb3f-86cd46e158fe"],
Cell[56924, 1487, 164, 3, 35, "Text",ExpressionUUID->"e96c649d-d607-429d-b0cb-659d6da05e0a"],
Cell[57091, 1492, 570, 12, 30, "Input",ExpressionUUID->"2b8ae390-1d2e-4e4f-9891-b5eb2d14d0c6"],
Cell[57664, 1506, 163, 3, 35, "Text",ExpressionUUID->"3922811b-c408-4fd6-b2a9-d2a24601cdb3"],
Cell[57830, 1511, 253, 4, 35, "Text",ExpressionUUID->"21ff01a9-ab57-4144-983d-5492af539140"],
Cell[58086, 1517, 279, 6, 30, "Input",ExpressionUUID->"608afb7a-588f-4be0-9399-6d9079b60a66"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58402, 1528, 498, 13, 106, "Section",ExpressionUUID->"8648563f-ab54-4e31-91af-b6227f71fc79"],
Cell[58903, 1543, 619, 13, 58, "Text",ExpressionUUID->"e5595792-7fe1-4504-8ace-1354d68cd202"],
Cell[59525, 1558, 143, 3, 30, "Input",ExpressionUUID->"f0207a93-8580-447d-b284-635beb1fc77c"],
Cell[59671, 1563, 602, 15, 115, "Input",ExpressionUUID->"4d7367f2-f230-4d88-9277-383f482debd8"],
Cell[60276, 1580, 197, 3, 35, "Text",ExpressionUUID->"fe4630fb-7835-4c0a-85f9-169ddc2e1f1d"],
Cell[60476, 1585, 531, 14, 52, "Input",ExpressionUUID->"fdfd72db-a751-4c51-af6e-5f8be3d0de6d"],
Cell[61010, 1601, 187, 3, 35, "Text",ExpressionUUID->"665a2ec6-dc86-488b-9bf6-13fa64a356d0"],
Cell[61200, 1606, 633, 18, 30, "Input",ExpressionUUID->"2ea07ba9-f309-4dfb-8f52-0456a98cc5c3"],
Cell[61836, 1626, 284, 8, 35, "Text",ExpressionUUID->"b7f3c562-0596-4cde-bbdb-fa32dc3bc390"],
Cell[62123, 1636, 190, 4, 30, "Input",ExpressionUUID->"1ed4288b-793b-4d82-afa8-ce6a77e6d062"],
Cell[62316, 1642, 198, 3, 35, "Text",ExpressionUUID->"26a26ae7-4d53-4818-9783-ede38c5cd11a"],
Cell[62517, 1647, 277, 6, 30, "Input",ExpressionUUID->"2a554c43-676d-4507-8a1c-4419da5f773e"]
}, Open  ]]
}, Open  ]]
}
]
*)

